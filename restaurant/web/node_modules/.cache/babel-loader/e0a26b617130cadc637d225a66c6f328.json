{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cryptography = require(\"@liskhq/lisk-cryptography\");\n\nvar prepare_transaction_1 = require(\"./prepare_transaction\");\n\nvar time_1 = require(\"./time\");\n\nexports.signRawTransaction = function (_ref) {\n  var transaction = _ref.transaction,\n      passphrase = _ref.passphrase,\n      secondPassphrase = _ref.secondPassphrase,\n      timeOffset = _ref.timeOffset;\n\n  var _cryptography$getAddr = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase),\n      publicKey = _cryptography$getAddr.publicKey,\n      address = _cryptography$getAddr.address;\n\n  var senderSecondPublicKey = secondPassphrase ? cryptography.getPrivateAndPublicKeyFromPassphrase(secondPassphrase).publicKey : undefined;\n  var propertiesToAdd = {\n    senderPublicKey: publicKey,\n    senderSecondPublicKey: senderSecondPublicKey,\n    senderId: address,\n    timestamp: time_1.getTimeWithOffset(timeOffset)\n  };\n  var transactionWithProperties = Object.assign({}, transaction, propertiesToAdd);\n  return prepare_transaction_1.prepareTransaction(transactionWithProperties, passphrase, secondPassphrase);\n};","map":{"version":3,"sources":["../../src/utils/sign_raw_transaction.ts"],"names":[],"mappings":";;;;;;AAcA,IAAA,YAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAUa,OAAA,CAAA,kBAAA,GAAqB,gBAKa;AAAA,MAJ9C,WAI8C,QAJ9C,WAI8C;AAAA,MAH9C,UAG8C,QAH9C,UAG8C;AAAA,MAF9C,gBAE8C,QAF9C,gBAE8C;AAAA,MAD9C,UAC8C,QAD9C,UAC8C;;AAAA,8BAI1C,YAAY,CAAC,oCAAb,CAAkD,UAAlD,CAJ0C;AAAA,MAE7C,SAF6C,yBAE7C,SAF6C;AAAA,MAG7C,OAH6C,yBAG7C,OAH6C;;AAK9C,MAAM,qBAAqB,GAAG,gBAAgB,GAC3C,YAAY,CAAC,oCAAb,CAAkD,gBAAlD,EACC,SAF0C,GAG3C,SAHH;AAKA,MAAM,eAAe,GAAG;AACvB,IAAA,eAAe,EAAE,SADM;AAEvB,IAAA,qBAAqB,EAArB,qBAFuB;AAGvB,IAAA,QAAQ,EAAE,OAHa;AAIvB,IAAA,SAAS,EAAE,MAAA,CAAA,iBAAA,CAAkB,UAAlB;AAJY,GAAxB;AAOA,MAAM,yBAAyB,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC3B,WAD2B,EAE3B,eAF2B,CAA/B;AAKA,SAAO,qBAAA,CAAA,kBAAA,CACN,yBADM,EAEN,UAFM,EAGN,gBAHM,CAAP;AAKA,CAhCY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\nconst prepare_transaction_1 = require(\"./prepare_transaction\");\nconst time_1 = require(\"./time\");\nexports.signRawTransaction = ({ transaction, passphrase, secondPassphrase, timeOffset, }) => {\n    const { publicKey, address, } = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase);\n    const senderSecondPublicKey = secondPassphrase\n        ? cryptography.getPrivateAndPublicKeyFromPassphrase(secondPassphrase)\n            .publicKey\n        : undefined;\n    const propertiesToAdd = {\n        senderPublicKey: publicKey,\n        senderSecondPublicKey,\n        senderId: address,\n        timestamp: time_1.getTimeWithOffset(timeOffset),\n    };\n    const transactionWithProperties = Object.assign({}, transaction, propertiesToAdd);\n    return prepare_transaction_1.prepareTransaction(transactionWithProperties, passphrase, secondPassphrase);\n};\n//# sourceMappingURL=sign_raw_transaction.js.map"]},"metadata":{},"sourceType":"script"}