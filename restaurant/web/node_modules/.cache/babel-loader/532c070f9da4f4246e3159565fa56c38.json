{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import api from'../services/api';import'../styles.css';var cryptography=require('@liskhq/lisk-cryptography');var FoodRequest=require(\"liskrestaurant_transactions\");function FormPayment(_ref,props){var onSubmit=_ref.onSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),passphrase=_useState2[0],setPassphrase=_useState2[1];var orderstring=decodeURI(document.location.href.split(\"?\")[1]);if(orderstring!==null&&orderstring!==undefined){orderstring=orderstring.split(\"&\");}function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var username,phone,deliveryaddress,observation,clientData,txFood;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return api.post(\"/cryptography\",{text:orderstring[5].split('=')[1]});case 3:username=_context.sent;_context.next=6;return api.post(\"/cryptography\",{text:orderstring[6].split('=')[1]});case 6:phone=_context.sent;_context.next=9;return api.post(\"/cryptography\",{text:orderstring[7].split('=')[1]});case 9:deliveryaddress=_context.sent;observation=\"\";if(!(orderstring[8]!==undefined)){_context.next=15;break;}_context.next=14;return api.post(\"/cryptography\",{text:orderstring[8].split('=')[1]});case 14:observation=_context.sent;case 15:clientData=cryptography.encryptMessageWithPassphrase(orderstring[5].split('=')[1].concat(' ***Field*** ').concat(orderstring[6].split('=')[1]).concat(' ***Field*** ').concat(orderstring[7].split('=')[1]).concat(' ***Field*** ').concat(orderstring[8].split('=')[1]),passphrase,cryptography.getPrivateAndPublicKeyFromPassphrase(passphrase).publicKey);txFood=new FoodRequest({asset:{name:orderstring[2].split('=')[1],description:orderstring[2].split('=')[1],username:username.data.response,phone:phone.data.response,deliveryaddress:deliveryaddress.data.response,foodType:orderstring[3].split('=')[1],observation:observation.data!==undefined?observation.data.response:\"\",clientData:clientData.encryptedMessage,clientNonce:clientData.nonce},amount:orderstring[1].split('=')[1].toString(),recipientId:orderstring[0].split('=')[1],//restaurant lisk address\ntimestamp:parseInt(orderstring[4].split('=')[1])});txFood.sign(passphrase);_context.next=20;return onSubmit({txFood:txFood});case 20:setPassphrase('');case 21:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{id:\"app\"},/*#__PURE__*/React.createElement(\"div\",{id:\"content\",align:\"center\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Your Lisk Passphrase\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"password\",id:\"passphrase\",name:\"passphrase\",required:true,onChange:function onChange(e){return setPassphrase(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Order\")))));}export default FormPayment;","map":{"version":3,"sources":["C:/PoC/restaurant_sidechain/web/src/components/FormPayment.js"],"names":["React","useState","useEffect","api","cryptography","require","FoodRequest","FormPayment","props","onSubmit","passphrase","setPassphrase","orderstring","decodeURI","document","location","href","split","undefined","handleSubmit","e","preventDefault","post","text","username","phone","deliveryaddress","observation","clientData","encryptMessageWithPassphrase","concat","getPrivateAndPublicKeyFromPassphrase","publicKey","txFood","asset","name","description","data","response","foodType","encryptedMessage","clientNonce","nonce","amount","toString","recipientId","timestamp","parseInt","sign","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport '../styles.css';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\nconst FoodRequest = require(\"liskrestaurant_transactions\");\r\n\r\nfunction FormPayment({onSubmit}, props){    \r\n    const [passphrase, setPassphrase] = useState('');    \r\n    \r\n    var orderstring = decodeURI(document.location.href.split(\"?\")[1]);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");                                      \r\n        }\r\n    \r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        var username = await api.post(\"/cryptography\", { text: orderstring[5].split('=')[1] });\r\n        var phone = await api.post(\"/cryptography\", { text: orderstring[6].split('=')[1] });\r\n        var deliveryaddress = await api.post(\"/cryptography\", { text: orderstring[7].split('=')[1] });\r\n        var observation = \"\";\r\n        if (orderstring[8] !== undefined){\r\n            observation = await api.post(\"/cryptography\", { text: orderstring[8].split('=')[1] });\r\n        }\r\n\r\n        var clientData = cryptography.encryptMessageWithPassphrase(\r\n            orderstring[5].split('=')[1].concat(' ***Field*** ')\r\n            .concat(orderstring[6].split('=')[1]).concat(' ***Field*** ')\r\n            .concat(orderstring[7].split('=')[1]).concat(' ***Field*** ')\r\n            .concat(orderstring[8].split('=')[1]),\r\n            passphrase,\r\n            cryptography.getPrivateAndPublicKeyFromPassphrase(passphrase).publicKey);                    \r\n\r\n        const txFood = new FoodRequest({\r\n            asset: {\r\n                name: orderstring[2].split('=')[1],\r\n                description: orderstring[2].split('=')[1],\r\n                username: username.data.response,\r\n                phone: phone.data.response,\r\n                deliveryaddress: deliveryaddress.data.response,\r\n                foodType: orderstring[3].split('=')[1],\r\n                observation: observation.data !== undefined ? observation.data.response : \"\",\r\n                clientData: clientData.encryptedMessage,\r\n                clientNonce: clientData.nonce\r\n            },\r\n            amount: orderstring[1].split('=')[1].toString(),\r\n            recipientId: orderstring[0].split('=')[1], //restaurant lisk address\r\n            timestamp: parseInt(orderstring[4].split('=')[1])\r\n        });\r\n\r\n        txFood.sign(passphrase);                \r\n\r\n        await onSubmit({         \r\n            txFood            \r\n        });\r\n        \r\n        setPassphrase('');        \r\n    }    \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>                                  \r\n                    <div>\r\n                        <label>Your Lisk Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"passphrase\" name=\"passphrase\" required onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble</label>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormPayment;\r\n"]},"metadata":{},"sourceType":"module"}