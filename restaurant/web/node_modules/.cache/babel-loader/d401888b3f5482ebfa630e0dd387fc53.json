{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactDOM from'react-dom';import api from'../services/api';import FormPayment from'./FormPayment';import'../styles.css';function FoodOrderPayment(props){var querystring=document.location.href.split(\"?\")[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),order=_useState2[0],setOrder=_useState2[1];/*this function should be uncommented if is desired to sign transaction at frontend*/function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}/*\r\n    async function handleSubmit(data){                              \r\n        var orderstring = decodeURI(querystring);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");\r\n                            \r\n            data.recipientAddress = orderstring[0].split('=')[1];\r\n            data.amount = orderstring[1].split('=')[1];\r\n            data.name = orderstring[2].split('=')[1];\r\n            data.request_type = orderstring[3].split('=')[1];\r\n            data.timestamp = orderstring[4].split('=')[1];\r\n            data.username = orderstring[5].split('=')[1];\r\n            data.phone = orderstring[6].split('=')[1];\r\n            data.deliveryaddress = orderstring[7].split('=')[1];\r\n            data.table = 1;\r\n            data.user = 1;            \r\n        }                        \r\n\r\n        order = await api.post('/userRequest', data);\r\n        setOrder(order);                  \r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                {order.data.status}\r\n                <br />\r\n                Transaction id: {order.data.response.transaction.id}\r\n                <br/>\r\n                Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                <br/>\r\n                Payer LSK address: {order.data.response.transaction.senderId}\r\n                <br/>\r\n                Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                <br/>\r\n                Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }*/function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var transaction_result,_transaction_result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.post('/payment',{transaction:data.txFood,networkid:'identifier'});case 2:order=_context.sent;console.log(order);setOrder(order);if(order.data.status===\"Transaction result\"){transaction_result=/*#__PURE__*/React.createElement(\"div\",{className:\"recipes_topic\"},order.data.status,/*#__PURE__*/React.createElement(\"br\",null),\"Transaction id: \",order.data.response.transaction.id,/*#__PURE__*/React.createElement(\"br\",null),\"Paid Amount: LSK \",order.data.response.transaction.amount/100000000,/*#__PURE__*/React.createElement(\"br\",null),\"Payer LSK address: \",order.data.response.transaction.senderId,/*#__PURE__*/React.createElement(\"br\",null),\"Restaurant LSK address: \",order.data.response.transaction.recipientId,/*#__PURE__*/React.createElement(\"br\",null),\"Broadcast info: \",order.data.response.broadcastInfo.data.message,/*#__PURE__*/React.createElement(\"div\",{className:\"clear\"}));ReactDOM.render(transaction_result,document.getElementById('content'));}else{_transaction_result=/*#__PURE__*/React.createElement(\"div\",{className:\"recipes_topic\"},\"Transaction result: \",order.data.status,/*#__PURE__*/React.createElement(\"div\",{className:\"clear\"}));ReactDOM.render(_transaction_result,document.getElementById('content'));}case 6:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{id:\"app\"},/*#__PURE__*/React.createElement(\"div\",{id:\"content\",align:\"center\"},/*#__PURE__*/React.createElement(FormPayment,{onSubmit:handleSubmit,orderstring:querystring})));}export default FoodOrderPayment;","map":{"version":3,"sources":["C:/PoC/restaurant_sidechain/web/src/components/FoodOrderPayment.js"],"names":["React","useState","useEffect","ReactDOM","api","FormPayment","FoodOrderPayment","props","querystring","document","location","href","split","order","setOrder","handleSubmit","data","post","transaction","txFood","networkid","console","log","status","transaction_result","response","id","amount","senderId","recipientId","broadcastInfo","message","render","getElementById"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAO,eAAP,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAgC,CAC5B,GAAIC,CAAAA,WAAW,CAAGC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAlB,CAD4B,cAGJX,QAAQ,CAAC,EAAD,CAHJ,wCAGvBY,KAHuB,eAGhBC,QAHgB,eAK5B,qFAL4B,QAMbC,CAAAA,YANa,iDA6C5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA7C4B,+FAM5B,iBAA4BC,IAA5B,mLAEkBZ,CAAAA,GAAG,CAACa,IAAJ,CAAS,UAAT,CAAqB,CAACC,WAAW,CAAEF,IAAI,CAACG,MAAnB,CAA2BC,SAAS,CAAE,YAAtC,CAArB,CAFlB,QAEIP,KAFJ,eAGIQ,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAEAC,QAAQ,CAACD,KAAD,CAAR,CAEA,GAAIA,KAAK,CAACG,IAAN,CAAWO,MAAX,GAAsB,oBAA1B,CAA+C,CAErCC,kBAFqC,cAGvC,2BAAK,SAAS,CAAC,eAAf,EACKX,KAAK,CAACG,IAAN,CAAWO,MADhB,cAEI,8BAFJ,oBAGqBV,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCQ,EAHrD,cAII,8BAJJ,qBAKsBb,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCS,MAAhC,CAAuC,SAL7D,cAMI,8BANJ,uBAOwBd,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCU,QAPxD,cAQI,8BARJ,4BAS6Bf,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCW,WAT7D,cAUI,8BAVJ,oBAWqBhB,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBK,aAApB,CAAkCd,IAAlC,CAAuCe,OAX5D,cAYI,2BAAK,SAAS,CAAC,OAAf,EAZJ,CAHuC,CAmB3C5B,QAAQ,CAAC6B,MAAT,CAAgBR,kBAAhB,CAAoCf,QAAQ,CAACwB,cAAT,CAAwB,SAAxB,CAApC,EACH,CApBD,IAoBK,CACKT,mBADL,cAEG,2BAAK,SAAS,CAAC,eAAf,yBACyBX,KAAK,CAACG,IAAN,CAAWO,MADpC,cAEI,2BAAK,SAAS,CAAC,OAAf,EAFJ,CAFH,CAQDpB,QAAQ,CAAC6B,MAAT,CAAgBR,mBAAhB,CAAoCf,QAAQ,CAACwB,cAAT,CAAwB,SAAxB,CAApC,EACH,CApCL,sDAN4B,+CAsF5B,mBACI,2BAAK,EAAE,CAAC,KAAR,eACI,2BAAK,EAAE,CAAC,SAAR,CAAkB,KAAK,CAAC,QAAxB,eACI,oBAAC,WAAD,EAAa,QAAQ,CAAElB,YAAvB,CAAqC,WAAW,CAAEP,WAAlD,EADJ,CADJ,CADJ,CAOH,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormPayment from './FormPayment';\r\nimport '../styles.css';\r\n\r\nfunction FoodOrderPayment(props){        \r\n    var querystring = document.location.href.split(\"?\")[1];         \r\n\r\n    var [order, setOrder] = useState([]);                    \r\n    \r\n    /*this function should be uncommented if is desired to sign transaction at frontend*/\r\n    async function handleSubmit(data){                                                          \r\n               \r\n        order = await api.post('/payment', {transaction: data.txFood, networkid: 'identifier'});\r\n        console.log(order);\r\n        \r\n        setOrder(order);                  \r\n        \r\n        if (order.data.status === \"Transaction result\"){\r\n\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    {order.data.status}\r\n                    <br />\r\n                    Transaction id: {order.data.response.transaction.id}\r\n                    <br/>\r\n                    Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                    <br/>\r\n                    Payer LSK address: {order.data.response.transaction.senderId}\r\n                    <br/>\r\n                    Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                    <br/>\r\n                    Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n        }else{\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    Transaction result: {order.data.status}                                  \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));  \r\n        }\r\n    }       \r\n    \r\n    /*\r\n    async function handleSubmit(data){                              \r\n        var orderstring = decodeURI(querystring);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");\r\n                            \r\n            data.recipientAddress = orderstring[0].split('=')[1];\r\n            data.amount = orderstring[1].split('=')[1];\r\n            data.name = orderstring[2].split('=')[1];\r\n            data.request_type = orderstring[3].split('=')[1];\r\n            data.timestamp = orderstring[4].split('=')[1];\r\n            data.username = orderstring[5].split('=')[1];\r\n            data.phone = orderstring[6].split('=')[1];\r\n            data.deliveryaddress = orderstring[7].split('=')[1];\r\n            data.table = 1;\r\n            data.user = 1;            \r\n        }                        \r\n\r\n        order = await api.post('/userRequest', data);\r\n        setOrder(order);                  \r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                {order.data.status}\r\n                <br />\r\n                Transaction id: {order.data.response.transaction.id}\r\n                <br/>\r\n                Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                <br/>\r\n                Payer LSK address: {order.data.response.transaction.senderId}\r\n                <br/>\r\n                Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                <br/>\r\n                Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }*/\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormPayment onSubmit={handleSubmit} orderstring={querystring}></FormPayment>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrderPayment;"]},"metadata":{},"sourceType":"module"}