{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\n\nexports.getId = transactionBytes => {\n  const transactionHash = cryptography.hash(transactionBytes);\n  const bufferFromFirstEntriesReversed = cryptography.getFirstEightBytesReversed(transactionHash);\n  const transactionId = cryptography.bufferToIntAsString(bufferFromFirstEntriesReversed);\n  return transactionId;\n};","map":{"version":3,"sources":["../../src/utils/transaction_id.ts"],"names":[],"mappings":";;;;;;AAcA,MAAA,YAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEa,OAAA,CAAA,KAAA,GAAS,gBAAD,IAAqC;AACzD,QAAM,eAAe,GAAG,YAAY,CAAC,IAAb,CAAkB,gBAAlB,CAAxB;AACA,QAAM,8BAA8B,GAAG,YAAY,CAAC,0BAAb,CACtC,eADsC,CAAvC;AAGA,QAAM,aAAa,GAAG,YAAY,CAAC,mBAAb,CACrB,8BADqB,CAAtB;AAIA,SAAO,aAAP;AACA,CAVY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\nexports.getId = (transactionBytes) => {\n    const transactionHash = cryptography.hash(transactionBytes);\n    const bufferFromFirstEntriesReversed = cryptography.getFirstEightBytesReversed(transactionHash);\n    const transactionId = cryptography.bufferToIntAsString(bufferFromFirstEntriesReversed);\n    return transactionId;\n};\n//# sourceMappingURL=transaction_id.js.map"]},"metadata":{},"sourceType":"script"}