{"ast":null,"code":"var _jsxFileName = \"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\src\\\\components\\\\FoodOrderPayment.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport api from '../services/api';\nimport FormPayment from './FormPayment';\nimport '../styles.css';\n\nfunction FoodOrderPayment(props) {\n  var querystring = document.location.href.split(\"?\")[1];\n  var [order, setOrder] = useState([]);\n  /*this function should be uncommented if is desired to sign transaction at frontend*/\n\n  async function handleSubmit(data) {\n    order = await api.post('/payment', {\n      transaction: data.txFood,\n      networkid: 'identifier'\n    });\n    console.log(order);\n    setOrder(order);\n\n    if (order.data.status === \"Transaction result\") {\n      const transaction_result = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recipes_topic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, order.data.status, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }), \"Transaction id: \", order.data.response.transaction.id, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), \"Paid Amount: LSK \", order.data.response.transaction.asset.amount / 100000000, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }), \"Payer LSK address: \", order.data.response.transaction.senderId, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }), \"Restaurant LSK address: \", order.data.response.transaction.asset.recipientId, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }), \"Broadcast info: \", order.data.response.broadcastInfo.data.message, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }));\n      ReactDOM.render(transaction_result, document.getElementById('content'));\n    } else {\n      const transaction_result = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"recipes_topic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"Transaction result: \", order.data.status, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }));\n      ReactDOM.render(transaction_result, document.getElementById('content'));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormPayment, {\n    onSubmit: handleSubmit,\n    orderstring: querystring,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default FoodOrderPayment;","map":{"version":3,"sources":["C:/PoC/restaurant_sidechain/web/src/components/FoodOrderPayment.js"],"names":["React","useState","useEffect","ReactDOM","api","FormPayment","FoodOrderPayment","props","querystring","document","location","href","split","order","setOrder","handleSubmit","data","post","transaction","txFood","networkid","console","log","status","transaction_result","response","id","asset","amount","senderId","recipientId","broadcastInfo","message","render","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,eAAP;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC5B,MAAIC,WAAW,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAlB;AAEA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAhC;AAEA;;AACA,iBAAec,YAAf,CAA4BC,IAA5B,EAAiC;AAE7BH,IAAAA,KAAK,GAAG,MAAMT,GAAG,CAACa,IAAJ,CAAS,UAAT,EAAqB;AAACC,MAAAA,WAAW,EAAEF,IAAI,CAACG,MAAnB;AAA2BC,MAAAA,SAAS,EAAE;AAAtC,KAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;;AAEA,QAAIA,KAAK,CAACG,IAAN,CAAWO,MAAX,KAAsB,oBAA1B,EAA+C;AAE3C,YAAMC,kBAAkB,gBACpB;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,KAAK,CAACG,IAAN,CAAWO,MADhB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,sBAGqBV,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCQ,EAHrD,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,uBAKsBb,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCS,KAAhC,CAAsCC,MAAtC,GAA6C,SALnE,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,yBAOwBf,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCW,QAPxD,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,8BAS6BhB,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBP,WAApB,CAAgCS,KAAhC,CAAsCG,WATnE,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,sBAWqBjB,KAAK,CAACG,IAAN,CAAWS,QAAX,CAAoBM,aAApB,CAAkCf,IAAlC,CAAuCgB,OAX5D,eAYI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAiBA7B,MAAAA,QAAQ,CAAC8B,MAAT,CAAgBT,kBAAhB,EAAoCf,QAAQ,CAACyB,cAAT,CAAwB,SAAxB,CAApC;AACH,KApBD,MAoBK;AACD,YAAMV,kBAAkB,gBACpB;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACyBX,KAAK,CAACG,IAAN,CAAWO,MADpC,eAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOApB,MAAAA,QAAQ,CAAC8B,MAAT,CAAgBT,kBAAhB,EAAoCf,QAAQ,CAACyB,cAAT,CAAwB,SAAxB,CAApC;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEnB,YAAvB;AAAqC,IAAA,WAAW,EAAEP,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH;;AAED,eAAeF,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormPayment from './FormPayment';\r\nimport '../styles.css';\r\n\r\nfunction FoodOrderPayment(props){        \r\n    var querystring = document.location.href.split(\"?\")[1];         \r\n\r\n    var [order, setOrder] = useState([]);                    \r\n    \r\n    /*this function should be uncommented if is desired to sign transaction at frontend*/\r\n    async function handleSubmit(data){                                                          \r\n               \r\n        order = await api.post('/payment', {transaction: data.txFood, networkid: 'identifier'});\r\n        console.log(order);\r\n        \r\n        setOrder(order);                  \r\n        \r\n        if (order.data.status === \"Transaction result\"){\r\n\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    {order.data.status}\r\n                    <br />\r\n                    Transaction id: {order.data.response.transaction.id}\r\n                    <br/>\r\n                    Paid Amount: LSK {order.data.response.transaction.asset.amount/100000000}\r\n                    <br/>\r\n                    Payer LSK address: {order.data.response.transaction.senderId}\r\n                    <br/>\r\n                    Restaurant LSK address: {order.data.response.transaction.asset.recipientId}\r\n                    <br/>\r\n                    Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n        }else{\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    Transaction result: {order.data.status}                                  \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));  \r\n        }\r\n    }           \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormPayment onSubmit={handleSubmit} orderstring={querystring}></FormPayment>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrderPayment;"]},"metadata":{},"sourceType":"module"}