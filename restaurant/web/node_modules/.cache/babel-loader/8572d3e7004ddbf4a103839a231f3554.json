{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base_transaction_1 = require(\"./base_transaction\");\n\nvar constants_1 = require(\"./constants\");\n\nvar errors_1 = require(\"./errors\");\n\nvar validation_1 = require(\"./utils/validation\");\n\nexports.dappAssetFormatSchema = {\n  type: 'object',\n  required: ['dapp'],\n  properties: {\n    dapp: {\n      type: 'object',\n      required: ['name', 'type', 'category'],\n      properties: {\n        icon: {\n          type: 'string',\n          format: 'uri',\n          maxLength: 2000\n        },\n        category: {\n          type: 'integer',\n          minimum: 0,\n          maximum: 8\n        },\n        type: {\n          type: 'integer',\n          minimum: 0,\n          maximum: 1\n        },\n        link: {\n          type: 'string',\n          format: 'uri',\n          minLength: 0,\n          maxLength: 2000\n        },\n        tags: {\n          type: 'string',\n          format: 'noNullByte',\n          maxLength: 160\n        },\n        description: {\n          type: 'string',\n          format: 'noNullByte',\n          maxLength: 160\n        },\n        name: {\n          type: 'string',\n          format: 'noNullByte',\n          minLength: 1,\n          maxLength: 32\n        }\n      }\n    }\n  }\n};\n\nvar DappTransaction = /*#__PURE__*/function (_base_transaction_1$B) {\n  _inherits(DappTransaction, _base_transaction_1$B);\n\n  var _super = _createSuper(DappTransaction);\n\n  function DappTransaction(rawTransaction) {\n    var _this;\n\n    _classCallCheck(this, DappTransaction);\n\n    _this = _super.call(this, rawTransaction);\n    var tx = typeof rawTransaction === 'object' && rawTransaction !== null ? rawTransaction : {};\n    _this.asset = tx.asset || {\n      dapp: {}\n    };\n    _this.containsUniqueData = true;\n\n    if (_this.asset && _this.asset.dapp && typeof _this.asset.dapp === 'object') {\n      _this.asset.dapp.description = _this.asset.dapp.description || undefined;\n      _this.asset.dapp.icon = _this.asset.dapp.icon || undefined;\n      _this.asset.dapp.tags = _this.asset.dapp.tags || undefined;\n    }\n\n    return _this;\n  }\n\n  _createClass(DappTransaction, [{\n    key: \"assetToBytes\",\n    value: function assetToBytes() {\n      var DAPP_TYPE_LENGTH = 4;\n      var DAPP_CATEGORY_LENGTH = 4;\n      var _this$asset$dapp = this.asset.dapp,\n          name = _this$asset$dapp.name,\n          description = _this$asset$dapp.description,\n          tags = _this$asset$dapp.tags,\n          link = _this$asset$dapp.link,\n          icon = _this$asset$dapp.icon,\n          type = _this$asset$dapp.type,\n          category = _this$asset$dapp.category;\n      var nameBuffer = Buffer.from(name, 'utf8');\n      var linkBuffer = link ? Buffer.from(link, 'utf8') : Buffer.alloc(0);\n      var typeBuffer = Buffer.alloc(DAPP_TYPE_LENGTH);\n      typeBuffer.writeIntLE(type, 0, DAPP_TYPE_LENGTH);\n      var categoryBuffer = Buffer.alloc(DAPP_CATEGORY_LENGTH);\n      categoryBuffer.writeIntLE(category, 0, DAPP_CATEGORY_LENGTH);\n      var descriptionBuffer = description ? Buffer.from(description, 'utf8') : Buffer.alloc(0);\n      var tagsBuffer = tags ? Buffer.from(tags, 'utf8') : Buffer.alloc(0);\n      var iconBuffer = icon ? Buffer.from(icon, 'utf8') : Buffer.alloc(0);\n      return Buffer.concat([nameBuffer, descriptionBuffer, tagsBuffer, linkBuffer, iconBuffer, typeBuffer, categoryBuffer]);\n    }\n  }, {\n    key: \"prepare\",\n    value: function () {\n      var _prepare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(store) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return store.account.cache([{\n                  address: this.senderId\n                }]);\n\n              case 2:\n                _context.next = 4;\n                return store.transaction.cache([{\n                  dapp_name: this.asset.dapp.name\n                }, {\n                  dapp_link: this.asset.dapp.link\n                }]);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function prepare(_x) {\n        return _prepare.apply(this, arguments);\n      }\n\n      return prepare;\n    }()\n  }, {\n    key: \"verifyAgainstTransactions\",\n    value: function verifyAgainstTransactions(transactions) {\n      var _this2 = this;\n\n      var sameTypeTransactions = transactions.filter(function (tx) {\n        return tx.type === _this2.type;\n      });\n      var errors = sameTypeTransactions.filter(function (tx) {\n        return 'dapp' in tx.asset && tx.asset.dapp.name === _this2.asset.dapp.name;\n      }).length > 0 ? [new errors_1.TransactionError('Dapp with the same name already exists.', this.id, '.asset.dapp.name', this.asset.dapp.name)] : [];\n\n      if (sameTypeTransactions.filter(function (tx) {\n        return 'dapp' in tx.asset && _this2.asset.dapp.link && _this2.asset.dapp.link === tx.asset.dapp.link;\n      }).length > 0) {\n        errors.push(new errors_1.TransactionError('Dapp with the same link already exists.', this.id, '.asset.dapp.link', this.asset.dapp.link));\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"validateAsset\",\n    value: function validateAsset() {\n      validation_1.validator.validate(exports.dappAssetFormatSchema, this.asset);\n      var errors = errors_1.convertToAssetError(this.id, validation_1.validator.errors);\n\n      if (!this.amount.eq(0)) {\n        errors.push(new errors_1.TransactionError('Amount must be zero for dapp transaction', this.id, '.amount', this.amount.toString(), '0'));\n      }\n\n      if (this.recipientId) {\n        errors.push(new errors_1.TransactionError(\"RecipientId is expected to be undefined\", this.id, '.recipientId'));\n      }\n\n      var validLinkSuffix = ['.zip'];\n\n      if (errors.length > 0) {\n        return errors;\n      }\n\n      if (this.asset.dapp.link && !validation_1.stringEndsWith(this.asset.dapp.link, validLinkSuffix)) {\n        errors.push(new errors_1.TransactionError(\"Dapp icon must have suffix \".concat(validLinkSuffix.toString()), this.id, '.asset.dapp.link', this.asset.dapp.link));\n      }\n\n      var validIconSuffix = ['.png', '.jpeg', '.jpg'];\n\n      if (this.asset.dapp.icon && !validation_1.stringEndsWith(this.asset.dapp.icon, validIconSuffix)) {\n        errors.push(new errors_1.TransactionError(\"Dapp icon must have suffix of one of \".concat(validIconSuffix.toString()), this.id, '.asset.dapp.icon', this.asset.dapp.icon));\n      }\n\n      if (this.asset.dapp.tags) {\n        var tags = this.asset.dapp.tags.split(',').map(function (tag) {\n          return tag.trim();\n        }).sort();\n\n        if (tags.length !== new Set(tags).size) {\n          errors.push(new errors_1.TransactionError(\"Dapp tags must have unique set\", this.id, '.asset.dapp.tags', this.asset.dapp.tags));\n        }\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"applyAsset\",\n    value: function applyAsset(store) {\n      var _this3 = this;\n\n      var errors = [];\n      var nameExists = store.transaction.find(function (transaction) {\n        return transaction.type === DappTransaction.TYPE && transaction.id !== _this3.id && transaction.asset.dapp && transaction.asset.dapp.name === _this3.asset.dapp.name;\n      });\n\n      if (nameExists) {\n        errors.push(new errors_1.TransactionError(\"Application name already exists: \".concat(this.asset.dapp.name), this.id, this.asset.dapp.name));\n      }\n\n      var linkExists = store.transaction.find(function (transaction) {\n        return transaction.type === DappTransaction.TYPE && transaction.id !== _this3.id && transaction.asset.dapp && transaction.asset.dapp.link === _this3.asset.dapp.link;\n      });\n\n      if (linkExists) {\n        errors.push(new errors_1.TransactionError(\"Application link already exists: \".concat(this.asset.dapp.link), this.id, this.asset.dapp.link));\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"undoAsset\",\n    value: function undoAsset(_) {\n      return [];\n    }\n  }, {\n    key: \"assetFromSync\",\n    value: function assetFromSync(raw) {\n      if (!raw.dapp_name) {\n        return undefined;\n      }\n\n      var dapp = {\n        name: raw.dapp_name,\n        description: raw.dapp_description,\n        tags: raw.dapp_tags,\n        type: raw.dapp_type,\n        link: raw.dapp_link,\n        category: raw.dapp_category,\n        icon: raw.dapp_icon\n      };\n      return {\n        dapp: dapp\n      };\n    }\n  }]);\n\n  return DappTransaction;\n}(base_transaction_1.BaseTransaction);\n\nDappTransaction.TYPE = 5;\nDappTransaction.FEE = constants_1.DAPP_FEE.toString();\nexports.DappTransaction = DappTransaction;","map":{"version":3,"sources":["../src/5_dapp_transaction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst base_transaction_1 = require(\"./base_transaction\");\r\nconst constants_1 = require(\"./constants\");\r\nconst errors_1 = require(\"./errors\");\r\nconst validation_1 = require(\"./utils/validation\");\r\nexports.dappAssetFormatSchema = {\r\n    type: 'object',\r\n    required: ['dapp'],\r\n    properties: {\r\n        dapp: {\r\n            type: 'object',\r\n            required: ['name', 'type', 'category'],\r\n            properties: {\r\n                icon: {\r\n                    type: 'string',\r\n                    format: 'uri',\r\n                    maxLength: 2000,\r\n                },\r\n                category: {\r\n                    type: 'integer',\r\n                    minimum: 0,\r\n                    maximum: 8,\r\n                },\r\n                type: {\r\n                    type: 'integer',\r\n                    minimum: 0,\r\n                    maximum: 1,\r\n                },\r\n                link: {\r\n                    type: 'string',\r\n                    format: 'uri',\r\n                    minLength: 0,\r\n                    maxLength: 2000,\r\n                },\r\n                tags: {\r\n                    type: 'string',\r\n                    format: 'noNullByte',\r\n                    maxLength: 160,\r\n                },\r\n                description: {\r\n                    type: 'string',\r\n                    format: 'noNullByte',\r\n                    maxLength: 160,\r\n                },\r\n                name: {\r\n                    type: 'string',\r\n                    format: 'noNullByte',\r\n                    minLength: 1,\r\n                    maxLength: 32,\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nclass DappTransaction extends base_transaction_1.BaseTransaction {\r\n    constructor(rawTransaction) {\r\n        super(rawTransaction);\r\n        const tx = (typeof rawTransaction === 'object' && rawTransaction !== null\r\n            ? rawTransaction\r\n            : {});\r\n        this.asset = (tx.asset || { dapp: {} });\r\n        this.containsUniqueData = true;\r\n        if (this.asset && this.asset.dapp && typeof this.asset.dapp === 'object') {\r\n            this.asset.dapp.description = this.asset.dapp.description || undefined;\r\n            this.asset.dapp.icon = this.asset.dapp.icon || undefined;\r\n            this.asset.dapp.tags = this.asset.dapp.tags || undefined;\r\n        }\r\n    }\r\n    assetToBytes() {\r\n        const DAPP_TYPE_LENGTH = 4;\r\n        const DAPP_CATEGORY_LENGTH = 4;\r\n        const { name, description, tags, link, icon, type, category, } = this.asset.dapp;\r\n        const nameBuffer = Buffer.from(name, 'utf8');\r\n        const linkBuffer = link ? Buffer.from(link, 'utf8') : Buffer.alloc(0);\r\n        const typeBuffer = Buffer.alloc(DAPP_TYPE_LENGTH);\r\n        typeBuffer.writeIntLE(type, 0, DAPP_TYPE_LENGTH);\r\n        const categoryBuffer = Buffer.alloc(DAPP_CATEGORY_LENGTH);\r\n        categoryBuffer.writeIntLE(category, 0, DAPP_CATEGORY_LENGTH);\r\n        const descriptionBuffer = description\r\n            ? Buffer.from(description, 'utf8')\r\n            : Buffer.alloc(0);\r\n        const tagsBuffer = tags ? Buffer.from(tags, 'utf8') : Buffer.alloc(0);\r\n        const iconBuffer = icon ? Buffer.from(icon, 'utf8') : Buffer.alloc(0);\r\n        return Buffer.concat([\r\n            nameBuffer,\r\n            descriptionBuffer,\r\n            tagsBuffer,\r\n            linkBuffer,\r\n            iconBuffer,\r\n            typeBuffer,\r\n            categoryBuffer,\r\n        ]);\r\n    }\r\n    async prepare(store) {\r\n        await store.account.cache([\r\n            {\r\n                address: this.senderId,\r\n            },\r\n        ]);\r\n        await store.transaction.cache([\r\n            {\r\n                dapp_name: this.asset.dapp.name,\r\n            },\r\n            { dapp_link: this.asset.dapp.link },\r\n        ]);\r\n    }\r\n    verifyAgainstTransactions(transactions) {\r\n        const sameTypeTransactions = transactions.filter(tx => tx.type === this.type);\r\n        const errors = sameTypeTransactions.filter(tx => 'dapp' in tx.asset &&\r\n            tx.asset.dapp.name === this.asset.dapp.name).length > 0\r\n            ? [\r\n                new errors_1.TransactionError('Dapp with the same name already exists.', this.id, '.asset.dapp.name', this.asset.dapp.name),\r\n            ]\r\n            : [];\r\n        if (sameTypeTransactions.filter(tx => 'dapp' in tx.asset &&\r\n            this.asset.dapp.link &&\r\n            this.asset.dapp.link === tx.asset.dapp.link).length > 0) {\r\n            errors.push(new errors_1.TransactionError('Dapp with the same link already exists.', this.id, '.asset.dapp.link', this.asset.dapp.link));\r\n        }\r\n        return errors;\r\n    }\r\n    validateAsset() {\r\n        validation_1.validator.validate(exports.dappAssetFormatSchema, this.asset);\r\n        const errors = errors_1.convertToAssetError(this.id, validation_1.validator.errors);\r\n        if (!this.amount.eq(0)) {\r\n            errors.push(new errors_1.TransactionError('Amount must be zero for dapp transaction', this.id, '.amount', this.amount.toString(), '0'));\r\n        }\r\n        if (this.recipientId) {\r\n            errors.push(new errors_1.TransactionError(`RecipientId is expected to be undefined`, this.id, '.recipientId'));\r\n        }\r\n        const validLinkSuffix = ['.zip'];\r\n        if (errors.length > 0) {\r\n            return errors;\r\n        }\r\n        if (this.asset.dapp.link &&\r\n            !validation_1.stringEndsWith(this.asset.dapp.link, validLinkSuffix)) {\r\n            errors.push(new errors_1.TransactionError(`Dapp icon must have suffix ${validLinkSuffix.toString()}`, this.id, '.asset.dapp.link', this.asset.dapp.link));\r\n        }\r\n        const validIconSuffix = ['.png', '.jpeg', '.jpg'];\r\n        if (this.asset.dapp.icon &&\r\n            !validation_1.stringEndsWith(this.asset.dapp.icon, validIconSuffix)) {\r\n            errors.push(new errors_1.TransactionError(`Dapp icon must have suffix of one of ${validIconSuffix.toString()}`, this.id, '.asset.dapp.icon', this.asset.dapp.icon));\r\n        }\r\n        if (this.asset.dapp.tags) {\r\n            const tags = this.asset.dapp.tags\r\n                .split(',')\r\n                .map(tag => tag.trim())\r\n                .sort();\r\n            if (tags.length !== new Set(tags).size) {\r\n                errors.push(new errors_1.TransactionError(`Dapp tags must have unique set`, this.id, '.asset.dapp.tags', this.asset.dapp.tags));\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    applyAsset(store) {\r\n        const errors = [];\r\n        const nameExists = store.transaction.find((transaction) => transaction.type === DappTransaction.TYPE &&\r\n            transaction.id !== this.id &&\r\n            transaction.asset.dapp &&\r\n            transaction.asset.dapp.name === this.asset.dapp.name);\r\n        if (nameExists) {\r\n            errors.push(new errors_1.TransactionError(`Application name already exists: ${this.asset.dapp.name}`, this.id, this.asset.dapp.name));\r\n        }\r\n        const linkExists = store.transaction.find((transaction) => transaction.type === DappTransaction.TYPE &&\r\n            transaction.id !== this.id &&\r\n            transaction.asset.dapp &&\r\n            transaction.asset.dapp.link === this.asset.dapp.link);\r\n        if (linkExists) {\r\n            errors.push(new errors_1.TransactionError(`Application link already exists: ${this.asset.dapp.link}`, this.id, this.asset.dapp.link));\r\n        }\r\n        return errors;\r\n    }\r\n    undoAsset(_) {\r\n        return [];\r\n    }\r\n    assetFromSync(raw) {\r\n        if (!raw.dapp_name) {\r\n            return undefined;\r\n        }\r\n        const dapp = {\r\n            name: raw.dapp_name,\r\n            description: raw.dapp_description,\r\n            tags: raw.dapp_tags,\r\n            type: raw.dapp_type,\r\n            link: raw.dapp_link,\r\n            category: raw.dapp_category,\r\n            icon: raw.dapp_icon,\r\n        };\r\n        return { dapp };\r\n    }\r\n}\r\nDappTransaction.TYPE = 5;\r\nDappTransaction.FEE = constants_1.DAPP_FEE.toString();\r\nexports.DappTransaction = DappTransaction;\r\n//# sourceMappingURL=5_dapp_transaction.js.map"]},"metadata":{},"sourceType":"script"}