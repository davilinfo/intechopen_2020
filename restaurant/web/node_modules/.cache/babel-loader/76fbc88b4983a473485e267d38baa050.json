{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n\n  var $async = it.schema.$async === true,\n      $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n      $id = it.self._getId(it.schema);\n\n  if (it.isTop) {\n    out += ' var validate = ';\n\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + $valid + ' = false; ';\n      }\n\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = '';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      var __err = out;\n      out = $$outStack.pop();\n\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + __err + ']); ';\n        } else {\n          out += ' validate.errors = [' + __err + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + $valid + ' = true; ';\n      }\n    }\n\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n\n    return out;\n  }\n\n  if (it.isTop) {\n    var $top = it.isTop,\n        $lvl = it.level = 0,\n        $dataLvl = it.dataLevel = 0,\n        $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n        $dataLvl = it.dataLevel,\n        $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + $lvl + ' = errors;';\n  }\n\n  var $valid = 'valid' + $lvl,\n      $breakOnError = !it.opts.allErrors,\n      $closingBraces1 = '',\n      $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n      $typeIsArray = Array.isArray($typeSchema);\n\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + it.RULES.all.$comment.code(it, '$comment');\n  }\n\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n\n    var $rulesGroup = it.RULES.types[$typeSchema];\n\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || $rulesGroup && !$shouldUseGroup($rulesGroup)) {\n      var $schemaPath = it.schemaPath + '.type',\n          $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n          $errSchemaPath = it.errSchemaPath + '/type',\n          $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + it.util[$method]($typeSchema, $data, true) + ') { ';\n\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n            $coerced = 'coerced' + $lvl;\n        out += ' var ' + $dataType + ' = typeof ' + $data + '; ';\n\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + $dataType + ' == \\'object\\' && Array.isArray(' + $data + ')) ' + $dataType + ' = \\'array\\'; ';\n        }\n\n        out += ' var ' + $coerced + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n\n        if (arr1) {\n          var $type,\n              $i = -1,\n              l1 = arr1.length - 1;\n\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n\n            if ($i) {\n              out += ' if (' + $coerced + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + $dataType + ' == \\'array\\' && ' + $data + '.length == 1) { ' + $coerced + ' = ' + $data + ' = ' + $data + '[0]; ' + $dataType + ' = typeof ' + $data + ';  } ';\n            }\n\n            if ($type == 'string') {\n              out += ' if (' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\') ' + $coerced + ' = \\'\\' + ' + $data + '; else if (' + $data + ' === null) ' + $coerced + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + $dataType + ' == \\'boolean\\' || ' + $data + ' === null || (' + $dataType + ' == \\'string\\' && ' + $data + ' && ' + $data + ' == +' + $data + ' ';\n\n              if ($type == 'integer') {\n                out += ' && !(' + $data + ' % 1)';\n              }\n\n              out += ')) ' + $coerced + ' = +' + $data + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + $data + ' === \\'false\\' || ' + $data + ' === 0 || ' + $data + ' === null) ' + $coerced + ' = false; else if (' + $data + ' === \\'true\\' || ' + $data + ' === 1) ' + $coerced + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + $data + ' === \\'\\' || ' + $data + ' === 0 || ' + $data + ' === false) ' + $coerced + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + $dataType + ' == \\'string\\' || ' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\' || ' + $data + ' == null) ' + $coerced + ' = [' + $data + ']; ';\n            }\n          }\n        }\n\n        out += ' ' + $bracesCoercion + ' if (' + $coerced + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = '';\n        /* istanbul ignore else */\n\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n\n          out += '\\' } ';\n\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n\n            out += '\\' ';\n          }\n\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n\n        var __err = out;\n        out = $$outStack.pop();\n\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n            $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + $data + ' = ' + $coerced + '; ';\n\n        if (!$dataLvl) {\n          out += 'if (' + $parentData + ' !== undefined)';\n        }\n\n        out += ' ' + $parentData + '[' + $parentDataProperty + '] = ' + $coerced + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = '';\n        /* istanbul ignore else */\n\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n\n          out += '\\' } ';\n\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n\n            out += '\\' ';\n          }\n\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n\n        var __err = out;\n        out = $$outStack.pop();\n\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n\n      out += ' } ';\n    }\n  }\n\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + it.RULES.all.$ref.code(it, '$ref') + ' ';\n\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + $lvl;\n      }\n\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n\n    if (arr2) {\n      var $rulesGroup,\n          i2 = -1,\n          l2 = arr2.length - 1;\n\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + it.util.checkDataType($rulesGroup.type, $data) + ') { ';\n          }\n\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                  $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n\n              if (arr3) {\n                var $propertyKey,\n                    i3 = -1,\n                    l3 = arr3.length - 1;\n\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + $passData + ' === undefined ';\n\n                    if (it.opts.useDefaults == 'empty') {\n                      out += ' || ' + $passData + ' === null || ' + $passData + ' === \\'\\' ';\n                    }\n\n                    out += ' ) ' + $passData + ' = ';\n\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n\n              if (arr4) {\n                var $sch,\n                    $i = -1,\n                    l4 = arr4.length - 1;\n\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + $passData + ' === undefined ';\n\n                    if (it.opts.useDefaults == 'empty') {\n                      out += ' || ' + $passData + ' === null || ' + $passData + ' === \\'\\' ';\n                    }\n\n                    out += ' ) ' + $passData + ' = ';\n\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n\n          var arr5 = $rulesGroup.rules;\n\n          if (arr5) {\n            var $rule,\n                i5 = -1,\n                l5 = arr5.length - 1;\n\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n\n                if ($code) {\n                  out += ' ' + $code + ' ';\n\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' ' + $closingBraces1 + ' ';\n            $closingBraces1 = '';\n          }\n\n          if ($rulesGroup.type) {\n            out += ' } ';\n\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                  $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = '';\n              /* istanbul ignore else */\n\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n                if ($typeIsArray) {\n                  out += '' + $typeSchema.join(\",\");\n                } else {\n                  out += '' + $typeSchema;\n                }\n\n                out += '\\' } ';\n\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n\n                  if ($typeIsArray) {\n                    out += '' + $typeSchema.join(\",\");\n                  } else {\n                    out += '' + $typeSchema;\n                  }\n\n                  out += '\\' ';\n                }\n\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n\n              var __err = out;\n              out = $$outStack.pop();\n\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n\n              out += ' } ';\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' if (errors === ';\n\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + $lvl;\n            }\n\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n\n  if ($breakOnError) {\n    out += ' ' + $closingBraces2 + ' ';\n  }\n\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + $valid + ' = errors === errs_' + $lvl + ';';\n  }\n\n  out = it.util.cleanUpCode(out);\n\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n\n    for (var i = 0; i < rules.length; i++) if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || $rule.implements && $ruleImplementsSomeKeyword($rule);\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n\n    for (var i = 0; i < impl.length; i++) if (it.schema[impl[i]] !== undefined) return true;\n  }\n\n  return out;\n};","map":{"version":3,"sources":["C:/Users/davin.DESKTOP-83VQBDE/Documents/restaurant_sidechain/node_modules/ajv/lib/dotjs/validate.js"],"names":["module","exports","generate_validate","it","$keyword","$ruleType","out","$async","schema","$refKeywords","util","schemaHasRulesExcept","RULES","all","$id","self","_getId","isTop","async","opts","sourceCode","processCode","$ref","$lvl","level","$dataLvl","dataLevel","$schema","$schemaPath","schemaPath","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","allErrors","$errorKeyword","$data","$valid","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","$top","rootId","resolve","fullPath","root","baseId","dataPathArr","undefined","url","Error","$closingBraces1","$closingBraces2","$typeSchema","type","$typeIsArray","Array","isArray","nullable","indexOf","concat","length","extendRefs","logger","warn","$comment","code","coerceTypes","$coerceToTypes","coerceToTypes","$rulesGroup","types","$shouldUseGroup","$method","$dataType","$coerced","$bracesCoercion","arr1","$type","$i","l1","join","$parentData","$parentDataProperty","arr2","i2","l2","checkDataType","useDefaults","properties","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","default","$passData","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","$code","keyword","cleanUpCode","finalCleanUpCode","i","implements","$ruleImplementsSomeKeyword","impl"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoD;AACnE,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAIC,MAAM,GAAGJ,EAAE,CAACK,MAAH,CAAUD,MAAV,KAAqB,IAAlC;AAAA,MACEE,YAAY,GAAGN,EAAE,CAACO,IAAH,CAAQC,oBAAR,CAA6BR,EAAE,CAACK,MAAhC,EAAwCL,EAAE,CAACS,KAAH,CAASC,GAAjD,EAAsD,MAAtD,CADjB;AAAA,MAEEC,GAAG,GAAGX,EAAE,CAACY,IAAH,CAAQC,MAAR,CAAeb,EAAE,CAACK,MAAlB,CAFR;;AAGA,MAAIL,EAAE,CAACc,KAAP,EAAc;AACZX,IAAAA,GAAG,IAAI,kBAAP;;AACA,QAAIC,MAAJ,EAAY;AACVJ,MAAAA,EAAE,CAACe,KAAH,GAAW,IAAX;AACAZ,MAAAA,GAAG,IAAI,QAAP;AACD;;AACDA,IAAAA,GAAG,IAAI,uFAAP;;AACA,QAAIQ,GAAG,KAAKX,EAAE,CAACgB,IAAH,CAAQC,UAAR,IAAsBjB,EAAE,CAACgB,IAAH,CAAQE,WAAnC,CAAP,EAAwD;AACtDf,MAAAA,GAAG,IAAI,OAAO,oBAAoBQ,GAApB,GAA0B,KAAjC,IAA0C,GAAjD;AACD;AACF;;AACD,MAAI,OAAOX,EAAE,CAACK,MAAV,IAAoB,SAApB,IAAiC,EAAEC,YAAY,IAAIN,EAAE,CAACK,MAAH,CAAUc,IAA5B,CAArC,EAAwE;AACtE,QAAIlB,QAAQ,GAAG,cAAf;AACA,QAAImB,IAAI,GAAGpB,EAAE,CAACqB,KAAd;AACA,QAAIC,QAAQ,GAAGtB,EAAE,CAACuB,SAAlB;AACA,QAAIC,OAAO,GAAGxB,EAAE,CAACK,MAAH,CAAUJ,QAAV,CAAd;AACA,QAAIwB,WAAW,GAAGzB,EAAE,CAAC0B,UAAH,GAAgB1B,EAAE,CAACO,IAAH,CAAQoB,WAAR,CAAoB1B,QAApB,CAAlC;AACA,QAAI2B,cAAc,GAAG5B,EAAE,CAAC6B,aAAH,GAAmB,GAAnB,GAAyB5B,QAA9C;AACA,QAAI6B,aAAa,GAAG,CAAC9B,EAAE,CAACgB,IAAH,CAAQe,SAA7B;AACA,QAAIC,aAAJ;AACA,QAAIC,KAAK,GAAG,UAAUX,QAAQ,IAAI,EAAtB,CAAZ;AACA,QAAIY,MAAM,GAAG,UAAUd,IAAvB;;AACA,QAAIpB,EAAE,CAACK,MAAH,KAAc,KAAlB,EAAyB;AACvB,UAAIL,EAAE,CAACc,KAAP,EAAc;AACZgB,QAAAA,aAAa,GAAG,IAAhB;AACD,OAFD,MAEO;AACL3B,QAAAA,GAAG,IAAI,UAAW+B,MAAX,GAAqB,YAA5B;AACD;;AACD,UAAIC,UAAU,GAAGA,UAAU,IAAI,EAA/B;AACAA,MAAAA,UAAU,CAACC,IAAX,CAAgBjC,GAAhB;AACAA,MAAAA,GAAG,GAAG,EAAN;AAAU;;AACV,UAAIH,EAAE,CAACqC,YAAH,KAAoB,KAAxB,EAA+B;AAC7BlC,QAAAA,GAAG,IAAI,oBAAoB6B,aAAa,IAAI,cAArC,IAAuD,sCAAvD,GAAiGhC,EAAE,CAACsC,SAApG,GAAiH,iBAAjH,GAAsItC,EAAE,CAACO,IAAH,CAAQgC,cAAR,CAAuBX,cAAvB,CAAtI,GAAgL,gBAAvL;;AACA,YAAI5B,EAAE,CAACgB,IAAH,CAAQwB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,UAAAA,GAAG,IAAI,0CAAP;AACD;;AACD,YAAIH,EAAE,CAACgB,IAAH,CAAQyB,OAAZ,EAAqB;AACnBtC,UAAAA,GAAG,IAAI,qDAAsDH,EAAE,CAAC0B,UAAzD,GAAuE,WAAvE,GAAsFO,KAAtF,GAA+F,GAAtG;AACD;;AACD9B,QAAAA,GAAG,IAAI,KAAP;AACD,OATD,MASO;AACLA,QAAAA,GAAG,IAAI,MAAP;AACD;;AACD,UAAIuC,KAAK,GAAGvC,GAAZ;AACAA,MAAAA,GAAG,GAAGgC,UAAU,CAACQ,GAAX,EAAN;;AACA,UAAI,CAAC3C,EAAE,CAAC4C,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,YAAI9B,EAAE,CAACe,KAAP,EAAc;AACZZ,UAAAA,GAAG,IAAI,iCAAkCuC,KAAlC,GAA2C,MAAlD;AACD,SAFD,MAEO;AACLvC,UAAAA,GAAG,IAAI,yBAA0BuC,KAA1B,GAAmC,mBAA1C;AACD;AACF,OAPD,MAOO;AACLvC,QAAAA,GAAG,IAAI,gBAAiBuC,KAAjB,GAA0B,8EAAjC;AACD;AACF,KAjCD,MAiCO;AACL,UAAI1C,EAAE,CAACc,KAAP,EAAc;AACZ,YAAIV,MAAJ,EAAY;AACVD,UAAAA,GAAG,IAAI,gBAAP;AACD,SAFD,MAEO;AACLA,UAAAA,GAAG,IAAI,wCAAP;AACD;AACF,OAND,MAMO;AACLA,QAAAA,GAAG,IAAI,UAAW+B,MAAX,GAAqB,WAA5B;AACD;AACF;;AACD,QAAIlC,EAAE,CAACc,KAAP,EAAc;AACZX,MAAAA,GAAG,IAAI,uBAAP;AACD;;AACD,WAAOA,GAAP;AACD;;AACD,MAAIH,EAAE,CAACc,KAAP,EAAc;AACZ,QAAI+B,IAAI,GAAG7C,EAAE,CAACc,KAAd;AAAA,QACEM,IAAI,GAAGpB,EAAE,CAACqB,KAAH,GAAW,CADpB;AAAA,QAEEC,QAAQ,GAAGtB,EAAE,CAACuB,SAAH,GAAe,CAF5B;AAAA,QAGEU,KAAK,GAAG,MAHV;AAIAjC,IAAAA,EAAE,CAAC8C,MAAH,GAAY9C,EAAE,CAAC+C,OAAH,CAAWC,QAAX,CAAoBhD,EAAE,CAACY,IAAH,CAAQC,MAAR,CAAeb,EAAE,CAACiD,IAAH,CAAQ5C,MAAvB,CAApB,CAAZ;AACAL,IAAAA,EAAE,CAACkD,MAAH,GAAYlD,EAAE,CAACkD,MAAH,IAAalD,EAAE,CAAC8C,MAA5B;AACA,WAAO9C,EAAE,CAACc,KAAV;AACAd,IAAAA,EAAE,CAACmD,WAAH,GAAiB,CAACC,SAAD,CAAjB;AACAjD,IAAAA,GAAG,IAAI,uBAAP;AACAA,IAAAA,GAAG,IAAI,uBAAP;AACAA,IAAAA,GAAG,IAAI,gDAAP;AACD,GAZD,MAYO;AACL,QAAIiB,IAAI,GAAGpB,EAAE,CAACqB,KAAd;AAAA,QACEC,QAAQ,GAAGtB,EAAE,CAACuB,SADhB;AAAA,QAEEU,KAAK,GAAG,UAAUX,QAAQ,IAAI,EAAtB,CAFV;AAGA,QAAIX,GAAJ,EAASX,EAAE,CAACkD,MAAH,GAAYlD,EAAE,CAAC+C,OAAH,CAAWM,GAAX,CAAerD,EAAE,CAACkD,MAAlB,EAA0BvC,GAA1B,CAAZ;AACT,QAAIP,MAAM,IAAI,CAACJ,EAAE,CAACe,KAAlB,EAAyB,MAAM,IAAIuC,KAAJ,CAAU,6BAAV,CAAN;AACzBnD,IAAAA,GAAG,IAAI,eAAgBiB,IAAhB,GAAwB,YAA/B;AACD;;AACD,MAAIc,MAAM,GAAG,UAAUd,IAAvB;AAAA,MACEU,aAAa,GAAG,CAAC9B,EAAE,CAACgB,IAAH,CAAQe,SAD3B;AAAA,MAEEwB,eAAe,GAAG,EAFpB;AAAA,MAGEC,eAAe,GAAG,EAHpB;AAIA,MAAIxB,aAAJ;AACA,MAAIyB,WAAW,GAAGzD,EAAE,CAACK,MAAH,CAAUqD,IAA5B;AAAA,MACEC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcJ,WAAd,CADjB;;AAEA,MAAIA,WAAW,IAAIzD,EAAE,CAACgB,IAAH,CAAQ8C,QAAvB,IAAmC9D,EAAE,CAACK,MAAH,CAAUyD,QAAV,KAAuB,IAA9D,EAAoE;AAClE,QAAIH,YAAJ,EAAkB;AAChB,UAAIF,WAAW,CAACM,OAAZ,CAAoB,MAApB,KAA+B,CAAC,CAApC,EAAuCN,WAAW,GAAGA,WAAW,CAACO,MAAZ,CAAmB,MAAnB,CAAd;AACxC,KAFD,MAEO,IAAIP,WAAW,IAAI,MAAnB,EAA2B;AAChCA,MAAAA,WAAW,GAAG,CAACA,WAAD,EAAc,MAAd,CAAd;AACAE,MAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AACD,MAAIA,YAAY,IAAIF,WAAW,CAACQ,MAAZ,IAAsB,CAA1C,EAA6C;AAC3CR,IAAAA,WAAW,GAAGA,WAAW,CAAC,CAAD,CAAzB;AACAE,IAAAA,YAAY,GAAG,KAAf;AACD;;AACD,MAAI3D,EAAE,CAACK,MAAH,CAAUc,IAAV,IAAkBb,YAAtB,EAAoC;AAClC,QAAIN,EAAE,CAACgB,IAAH,CAAQkD,UAAR,IAAsB,MAA1B,EAAkC;AAChC,YAAM,IAAIZ,KAAJ,CAAU,uDAAuDtD,EAAE,CAAC6B,aAA1D,GAA0E,2BAApF,CAAN;AACD,KAFD,MAEO,IAAI7B,EAAE,CAACgB,IAAH,CAAQkD,UAAR,KAAuB,IAA3B,EAAiC;AACtC5D,MAAAA,YAAY,GAAG,KAAf;AACAN,MAAAA,EAAE,CAACmE,MAAH,CAAUC,IAAV,CAAe,+CAA+CpE,EAAE,CAAC6B,aAAlD,GAAkE,GAAjF;AACD;AACF;;AACD,MAAI7B,EAAE,CAACK,MAAH,CAAUgE,QAAV,IAAsBrE,EAAE,CAACgB,IAAH,CAAQqD,QAAlC,EAA4C;AAC1ClE,IAAAA,GAAG,IAAI,MAAOH,EAAE,CAACS,KAAH,CAASC,GAAT,CAAa2D,QAAb,CAAsBC,IAAtB,CAA2BtE,EAA3B,EAA+B,UAA/B,CAAd;AACD;;AACD,MAAIyD,WAAJ,EAAiB;AACf,QAAIzD,EAAE,CAACgB,IAAH,CAAQuD,WAAZ,EAAyB;AACvB,UAAIC,cAAc,GAAGxE,EAAE,CAACO,IAAH,CAAQkE,aAAR,CAAsBzE,EAAE,CAACgB,IAAH,CAAQuD,WAA9B,EAA2Cd,WAA3C,CAArB;AACD;;AACD,QAAIiB,WAAW,GAAG1E,EAAE,CAACS,KAAH,CAASkE,KAAT,CAAelB,WAAf,CAAlB;;AACA,QAAIe,cAAc,IAAIb,YAAlB,IAAkCe,WAAW,KAAK,IAAlD,IAA2DA,WAAW,IAAI,CAACE,eAAe,CAACF,WAAD,CAA9F,EAA8G;AAC5G,UAAIjD,WAAW,GAAGzB,EAAE,CAAC0B,UAAH,GAAgB,OAAlC;AAAA,UACEE,cAAc,GAAG5B,EAAE,CAAC6B,aAAH,GAAmB,OADtC;AAEA,UAAIJ,WAAW,GAAGzB,EAAE,CAAC0B,UAAH,GAAgB,OAAlC;AAAA,UACEE,cAAc,GAAG5B,EAAE,CAAC6B,aAAH,GAAmB,OADtC;AAAA,UAEEgD,OAAO,GAAGlB,YAAY,GAAG,gBAAH,GAAsB,eAF9C;AAGAxD,MAAAA,GAAG,IAAI,UAAWH,EAAE,CAACO,IAAH,CAAQsE,OAAR,EAAiBpB,WAAjB,EAA8BxB,KAA9B,EAAqC,IAArC,CAAX,GAAyD,MAAhE;;AACA,UAAIuC,cAAJ,EAAoB;AAClB,YAAIM,SAAS,GAAG,aAAa1D,IAA7B;AAAA,YACE2D,QAAQ,GAAG,YAAY3D,IADzB;AAEAjB,QAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,YAAxB,GAAwC7C,KAAxC,GAAiD,IAAxD;;AACA,YAAIjC,EAAE,CAACgB,IAAH,CAAQuD,WAAR,IAAuB,OAA3B,EAAoC;AAClCpE,UAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,kCAAxB,GAA8D7C,KAA9D,GAAuE,KAAvE,GAAgF6C,SAAhF,GAA6F,gBAApG;AACD;;AACD3E,QAAAA,GAAG,IAAI,UAAW4E,QAAX,GAAuB,gBAA9B;AACA,YAAIC,eAAe,GAAG,EAAtB;AACA,YAAIC,IAAI,GAAGT,cAAX;;AACA,YAAIS,IAAJ,EAAU;AACR,cAAIC,KAAJ;AAAA,cAAWC,EAAE,GAAG,CAAC,CAAjB;AAAA,cACEC,EAAE,GAAGH,IAAI,CAAChB,MAAL,GAAc,CADrB;;AAEA,iBAAOkB,EAAE,GAAGC,EAAZ,EAAgB;AACdF,YAAAA,KAAK,GAAGD,IAAI,CAACE,EAAE,IAAI,CAAP,CAAZ;;AACA,gBAAIA,EAAJ,EAAQ;AACNhF,cAAAA,GAAG,IAAI,UAAW4E,QAAX,GAAuB,oBAA9B;AACAC,cAAAA,eAAe,IAAI,GAAnB;AACD;;AACD,gBAAIhF,EAAE,CAACgB,IAAH,CAAQuD,WAAR,IAAuB,OAAvB,IAAkCW,KAAK,IAAI,OAA/C,EAAwD;AACtD/E,cAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,mBAAxB,GAA+C7C,KAA/C,GAAwD,kBAAxD,GAA8E8C,QAA9E,GAA0F,KAA1F,GAAmG9C,KAAnG,GAA4G,KAA5G,GAAqHA,KAArH,GAA8H,OAA9H,GAAyI6C,SAAzI,GAAsJ,YAAtJ,GAAsK7C,KAAtK,GAA+K,OAAtL;AACD;;AACD,gBAAIiD,KAAK,IAAI,QAAb,EAAuB;AACrB/E,cAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,oBAAxB,GAAgDA,SAAhD,GAA6D,mBAA7D,GAAoFC,QAApF,GAAgG,YAAhG,GAAgH9C,KAAhH,GAAyH,aAAzH,GAA0IA,KAA1I,GAAmJ,aAAnJ,GAAoK8C,QAApK,GAAgL,WAAvL;AACD,aAFD,MAEO,IAAIG,KAAK,IAAI,QAAT,IAAqBA,KAAK,IAAI,SAAlC,EAA6C;AAClD/E,cAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,qBAAxB,GAAiD7C,KAAjD,GAA0D,gBAA1D,GAA8E6C,SAA9E,GAA2F,oBAA3F,GAAmH7C,KAAnH,GAA4H,MAA5H,GAAsIA,KAAtI,GAA+I,OAA/I,GAA0JA,KAA1J,GAAmK,GAA1K;;AACA,kBAAIiD,KAAK,IAAI,SAAb,EAAwB;AACtB/E,gBAAAA,GAAG,IAAI,WAAY8B,KAAZ,GAAqB,OAA5B;AACD;;AACD9B,cAAAA,GAAG,IAAI,QAAS4E,QAAT,GAAqB,MAArB,GAA+B9C,KAA/B,GAAwC,IAA/C;AACD,aANM,MAMA,IAAIiD,KAAK,IAAI,SAAb,EAAwB;AAC7B/E,cAAAA,GAAG,IAAI,UAAW8B,KAAX,GAAoB,oBAApB,GAA4CA,KAA5C,GAAqD,YAArD,GAAqEA,KAArE,GAA8E,aAA9E,GAA+F8C,QAA/F,GAA2G,qBAA3G,GAAoI9C,KAApI,GAA6I,mBAA7I,GAAoKA,KAApK,GAA6K,UAA7K,GAA2L8C,QAA3L,GAAuM,WAA9M;AACD,aAFM,MAEA,IAAIG,KAAK,IAAI,MAAb,EAAqB;AAC1B/E,cAAAA,GAAG,IAAI,UAAW8B,KAAX,GAAoB,eAApB,GAAuCA,KAAvC,GAAgD,YAAhD,GAAgEA,KAAhE,GAAyE,cAAzE,GAA2F8C,QAA3F,GAAuG,WAA9G;AACD,aAFM,MAEA,IAAI/E,EAAE,CAACgB,IAAH,CAAQuD,WAAR,IAAuB,OAAvB,IAAkCW,KAAK,IAAI,OAA/C,EAAwD;AAC7D/E,cAAAA,GAAG,IAAI,UAAW2E,SAAX,GAAwB,oBAAxB,GAAgDA,SAAhD,GAA6D,oBAA7D,GAAqFA,SAArF,GAAkG,qBAAlG,GAA2H7C,KAA3H,GAAoI,YAApI,GAAoJ8C,QAApJ,GAAgK,MAAhK,GAA0K9C,KAA1K,GAAmL,KAA1L;AACD;AACF;AACF;;AACD9B,QAAAA,GAAG,IAAI,MAAO6E,eAAP,GAA0B,OAA1B,GAAqCD,QAArC,GAAiD,sBAAxD;AACA,YAAI5C,UAAU,GAAGA,UAAU,IAAI,EAA/B;AACAA,QAAAA,UAAU,CAACC,IAAX,CAAgBjC,GAAhB;AACAA,QAAAA,GAAG,GAAG,EAAN;AAAU;;AACV,YAAIH,EAAE,CAACqC,YAAH,KAAoB,KAAxB,EAA+B;AAC7BlC,UAAAA,GAAG,IAAI,oBAAoB6B,aAAa,IAAI,MAArC,IAA+C,sCAA/C,GAAyFhC,EAAE,CAACsC,SAA5F,GAAyG,iBAAzG,GAA8HtC,EAAE,CAACO,IAAH,CAAQgC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;;AACA,cAAI+B,YAAJ,EAAkB;AAChBxD,YAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,WAFD,MAEO;AACLlF,YAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,UAAAA,GAAG,IAAI,OAAP;;AACA,cAAIH,EAAE,CAACgB,IAAH,CAAQwB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,YAAAA,GAAG,IAAI,0BAAP;;AACA,gBAAIwD,YAAJ,EAAkB;AAChBxD,cAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,aAFD,MAEO;AACLlF,cAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,YAAAA,GAAG,IAAI,KAAP;AACD;;AACD,cAAIH,EAAE,CAACgB,IAAH,CAAQyB,OAAZ,EAAqB;AACnBtC,YAAAA,GAAG,IAAI,+BAAgCsB,WAAhC,GAA+C,kCAA/C,GAAqFzB,EAAE,CAAC0B,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;;AACD9B,UAAAA,GAAG,IAAI,KAAP;AACD,SArBD,MAqBO;AACLA,UAAAA,GAAG,IAAI,MAAP;AACD;;AACD,YAAIuC,KAAK,GAAGvC,GAAZ;AACAA,QAAAA,GAAG,GAAGgC,UAAU,CAACQ,GAAX,EAAN;;AACA,YAAI,CAAC3C,EAAE,CAAC4C,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,cAAI9B,EAAE,CAACe,KAAP,EAAc;AACZZ,YAAAA,GAAG,IAAI,iCAAkCuC,KAAlC,GAA2C,MAAlD;AACD,WAFD,MAEO;AACLvC,YAAAA,GAAG,IAAI,yBAA0BuC,KAA1B,GAAmC,mBAA1C;AACD;AACF,SAPD,MAOO;AACLvC,UAAAA,GAAG,IAAI,gBAAiBuC,KAAjB,GAA0B,8EAAjC;AACD;;AACDvC,QAAAA,GAAG,IAAI,aAAP;AACA,YAAImF,WAAW,GAAGhE,QAAQ,GAAG,UAAWA,QAAQ,GAAG,CAAZ,IAAkB,EAA5B,CAAH,GAAqC,YAA/D;AAAA,YACEiE,mBAAmB,GAAGjE,QAAQ,GAAGtB,EAAE,CAACmD,WAAH,CAAe7B,QAAf,CAAH,GAA8B,oBAD9D;AAEAnB,QAAAA,GAAG,IAAI,MAAO8B,KAAP,GAAgB,KAAhB,GAAyB8C,QAAzB,GAAqC,IAA5C;;AACA,YAAI,CAACzD,QAAL,EAAe;AACbnB,UAAAA,GAAG,IAAI,SAAUmF,WAAV,GAAyB,iBAAhC;AACD;;AACDnF,QAAAA,GAAG,IAAI,MAAOmF,WAAP,GAAsB,GAAtB,GAA6BC,mBAA7B,GAAoD,MAApD,GAA8DR,QAA9D,GAA0E,MAAjF;AACD,OAvFD,MAuFO;AACL,YAAI5C,UAAU,GAAGA,UAAU,IAAI,EAA/B;AACAA,QAAAA,UAAU,CAACC,IAAX,CAAgBjC,GAAhB;AACAA,QAAAA,GAAG,GAAG,EAAN;AAAU;;AACV,YAAIH,EAAE,CAACqC,YAAH,KAAoB,KAAxB,EAA+B;AAC7BlC,UAAAA,GAAG,IAAI,oBAAoB6B,aAAa,IAAI,MAArC,IAA+C,sCAA/C,GAAyFhC,EAAE,CAACsC,SAA5F,GAAyG,iBAAzG,GAA8HtC,EAAE,CAACO,IAAH,CAAQgC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;;AACA,cAAI+B,YAAJ,EAAkB;AAChBxD,YAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,WAFD,MAEO;AACLlF,YAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,UAAAA,GAAG,IAAI,OAAP;;AACA,cAAIH,EAAE,CAACgB,IAAH,CAAQwB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,YAAAA,GAAG,IAAI,0BAAP;;AACA,gBAAIwD,YAAJ,EAAkB;AAChBxD,cAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,aAFD,MAEO;AACLlF,cAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,YAAAA,GAAG,IAAI,KAAP;AACD;;AACD,cAAIH,EAAE,CAACgB,IAAH,CAAQyB,OAAZ,EAAqB;AACnBtC,YAAAA,GAAG,IAAI,+BAAgCsB,WAAhC,GAA+C,kCAA/C,GAAqFzB,EAAE,CAAC0B,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;;AACD9B,UAAAA,GAAG,IAAI,KAAP;AACD,SArBD,MAqBO;AACLA,UAAAA,GAAG,IAAI,MAAP;AACD;;AACD,YAAIuC,KAAK,GAAGvC,GAAZ;AACAA,QAAAA,GAAG,GAAGgC,UAAU,CAACQ,GAAX,EAAN;;AACA,YAAI,CAAC3C,EAAE,CAAC4C,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,cAAI9B,EAAE,CAACe,KAAP,EAAc;AACZZ,YAAAA,GAAG,IAAI,iCAAkCuC,KAAlC,GAA2C,MAAlD;AACD,WAFD,MAEO;AACLvC,YAAAA,GAAG,IAAI,yBAA0BuC,KAA1B,GAAmC,mBAA1C;AACD;AACF,SAPD,MAOO;AACLvC,UAAAA,GAAG,IAAI,gBAAiBuC,KAAjB,GAA0B,8EAAjC;AACD;AACF;;AACDvC,MAAAA,GAAG,IAAI,KAAP;AACD;AACF;;AACD,MAAIH,EAAE,CAACK,MAAH,CAAUc,IAAV,IAAkB,CAACb,YAAvB,EAAqC;AACnCH,IAAAA,GAAG,IAAI,MAAOH,EAAE,CAACS,KAAH,CAASC,GAAT,CAAaS,IAAb,CAAkBmD,IAAlB,CAAuBtE,EAAvB,EAA2B,MAA3B,CAAP,GAA6C,GAApD;;AACA,QAAI8B,aAAJ,EAAmB;AACjB3B,MAAAA,GAAG,IAAI,oBAAP;;AACA,UAAI0C,IAAJ,EAAU;AACR1C,QAAAA,GAAG,IAAI,GAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,UAAWiB,IAAlB;AACD;;AACDjB,MAAAA,GAAG,IAAI,MAAP;AACAqD,MAAAA,eAAe,IAAI,GAAnB;AACD;AACF,GAZD,MAYO;AACL,QAAIgC,IAAI,GAAGxF,EAAE,CAACS,KAAd;;AACA,QAAI+E,IAAJ,EAAU;AACR,UAAId,WAAJ;AAAA,UAAiBe,EAAE,GAAG,CAAC,CAAvB;AAAA,UACEC,EAAE,GAAGF,IAAI,CAACvB,MAAL,GAAc,CADrB;;AAEA,aAAOwB,EAAE,GAAGC,EAAZ,EAAgB;AACdhB,QAAAA,WAAW,GAAGc,IAAI,CAACC,EAAE,IAAI,CAAP,CAAlB;;AACA,YAAIb,eAAe,CAACF,WAAD,CAAnB,EAAkC;AAChC,cAAIA,WAAW,CAAChB,IAAhB,EAAsB;AACpBvD,YAAAA,GAAG,IAAI,UAAWH,EAAE,CAACO,IAAH,CAAQoF,aAAR,CAAsBjB,WAAW,CAAChB,IAAlC,EAAwCzB,KAAxC,CAAX,GAA6D,MAApE;AACD;;AACD,cAAIjC,EAAE,CAACgB,IAAH,CAAQ4E,WAAR,IAAuB,CAAC5F,EAAE,CAAC4C,aAA/B,EAA8C;AAC5C,gBAAI8B,WAAW,CAAChB,IAAZ,IAAoB,QAApB,IAAgC1D,EAAE,CAACK,MAAH,CAAUwF,UAA9C,EAA0D;AACxD,kBAAIrE,OAAO,GAAGxB,EAAE,CAACK,MAAH,CAAUwF,UAAxB;AAAA,kBACEC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYxE,OAAZ,CADhB;AAEA,kBAAIyE,IAAI,GAAGH,WAAX;;AACA,kBAAIG,IAAJ,EAAU;AACR,oBAAIC,YAAJ;AAAA,oBAAkBC,EAAE,GAAG,CAAC,CAAxB;AAAA,oBACEC,EAAE,GAAGH,IAAI,CAAChC,MAAL,GAAc,CADrB;;AAEA,uBAAOkC,EAAE,GAAGC,EAAZ,EAAgB;AACdF,kBAAAA,YAAY,GAAGD,IAAI,CAACE,EAAE,IAAI,CAAP,CAAnB;AACA,sBAAIE,IAAI,GAAG7E,OAAO,CAAC0E,YAAD,CAAlB;;AACA,sBAAIG,IAAI,CAACC,OAAL,KAAiBlD,SAArB,EAAgC;AAC9B,wBAAImD,SAAS,GAAGtE,KAAK,GAAGjC,EAAE,CAACO,IAAH,CAAQoB,WAAR,CAAoBuE,YAApB,CAAxB;AACA/F,oBAAAA,GAAG,IAAI,WAAYoG,SAAZ,GAAyB,iBAAhC;;AACA,wBAAIvG,EAAE,CAACgB,IAAH,CAAQ4E,WAAR,IAAuB,OAA3B,EAAoC;AAClCzF,sBAAAA,GAAG,IAAI,SAAUoG,SAAV,GAAuB,eAAvB,GAA0CA,SAA1C,GAAuD,YAA9D;AACD;;AACDpG,oBAAAA,GAAG,IAAI,QAASoG,SAAT,GAAsB,KAA7B;;AACA,wBAAIvG,EAAE,CAACgB,IAAH,CAAQ4E,WAAR,IAAuB,QAA3B,EAAqC;AACnCzF,sBAAAA,GAAG,IAAI,MAAOH,EAAE,CAACwG,UAAH,CAAcH,IAAI,CAACC,OAAnB,CAAP,GAAsC,GAA7C;AACD,qBAFD,MAEO;AACLnG,sBAAAA,GAAG,IAAI,MAAOsG,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACC,OAApB,CAAP,GAAuC,GAA9C;AACD;;AACDnG,oBAAAA,GAAG,IAAI,IAAP;AACD;AACF;AACF;AACF,aA1BD,MA0BO,IAAIuE,WAAW,CAAChB,IAAZ,IAAoB,OAApB,IAA+BE,KAAK,CAACC,OAAN,CAAc7D,EAAE,CAACK,MAAH,CAAUsG,KAAxB,CAAnC,EAAmE;AACxE,kBAAIC,IAAI,GAAG5G,EAAE,CAACK,MAAH,CAAUsG,KAArB;;AACA,kBAAIC,IAAJ,EAAU;AACR,oBAAIP,IAAJ;AAAA,oBAAUlB,EAAE,GAAG,CAAC,CAAhB;AAAA,oBACE0B,EAAE,GAAGD,IAAI,CAAC3C,MAAL,GAAc,CADrB;;AAEA,uBAAOkB,EAAE,GAAG0B,EAAZ,EAAgB;AACdR,kBAAAA,IAAI,GAAGO,IAAI,CAACzB,EAAE,IAAI,CAAP,CAAX;;AACA,sBAAIkB,IAAI,CAACC,OAAL,KAAiBlD,SAArB,EAAgC;AAC9B,wBAAImD,SAAS,GAAGtE,KAAK,GAAG,GAAR,GAAckD,EAAd,GAAmB,GAAnC;AACAhF,oBAAAA,GAAG,IAAI,WAAYoG,SAAZ,GAAyB,iBAAhC;;AACA,wBAAIvG,EAAE,CAACgB,IAAH,CAAQ4E,WAAR,IAAuB,OAA3B,EAAoC;AAClCzF,sBAAAA,GAAG,IAAI,SAAUoG,SAAV,GAAuB,eAAvB,GAA0CA,SAA1C,GAAuD,YAA9D;AACD;;AACDpG,oBAAAA,GAAG,IAAI,QAASoG,SAAT,GAAsB,KAA7B;;AACA,wBAAIvG,EAAE,CAACgB,IAAH,CAAQ4E,WAAR,IAAuB,QAA3B,EAAqC;AACnCzF,sBAAAA,GAAG,IAAI,MAAOH,EAAE,CAACwG,UAAH,CAAcH,IAAI,CAACC,OAAnB,CAAP,GAAsC,GAA7C;AACD,qBAFD,MAEO;AACLnG,sBAAAA,GAAG,IAAI,MAAOsG,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACC,OAApB,CAAP,GAAuC,GAA9C;AACD;;AACDnG,oBAAAA,GAAG,IAAI,IAAP;AACD;AACF;AACF;AACF;AACF;;AACD,cAAI2G,IAAI,GAAGpC,WAAW,CAACqC,KAAvB;;AACA,cAAID,IAAJ,EAAU;AACR,gBAAIE,KAAJ;AAAA,gBAAWC,EAAE,GAAG,CAAC,CAAjB;AAAA,gBACEC,EAAE,GAAGJ,IAAI,CAAC7C,MAAL,GAAc,CADrB;;AAEA,mBAAOgD,EAAE,GAAGC,EAAZ,EAAgB;AACdF,cAAAA,KAAK,GAAGF,IAAI,CAACG,EAAE,IAAI,CAAP,CAAZ;;AACA,kBAAIE,cAAc,CAACH,KAAD,CAAlB,EAA2B;AACzB,oBAAII,KAAK,GAAGJ,KAAK,CAAC1C,IAAN,CAAWtE,EAAX,EAAegH,KAAK,CAACK,OAArB,EAA8B3C,WAAW,CAAChB,IAA1C,CAAZ;;AACA,oBAAI0D,KAAJ,EAAW;AACTjH,kBAAAA,GAAG,IAAI,MAAOiH,KAAP,GAAgB,GAAvB;;AACA,sBAAItF,aAAJ,EAAmB;AACjByB,oBAAAA,eAAe,IAAI,GAAnB;AACD;AACF;AACF;AACF;AACF;;AACD,cAAIzB,aAAJ,EAAmB;AACjB3B,YAAAA,GAAG,IAAI,MAAOoD,eAAP,GAA0B,GAAjC;AACAA,YAAAA,eAAe,GAAG,EAAlB;AACD;;AACD,cAAImB,WAAW,CAAChB,IAAhB,EAAsB;AACpBvD,YAAAA,GAAG,IAAI,KAAP;;AACA,gBAAIsD,WAAW,IAAIA,WAAW,KAAKiB,WAAW,CAAChB,IAA3C,IAAmD,CAACc,cAAxD,EAAwE;AACtErE,cAAAA,GAAG,IAAI,UAAP;AACA,kBAAIsB,WAAW,GAAGzB,EAAE,CAAC0B,UAAH,GAAgB,OAAlC;AAAA,kBACEE,cAAc,GAAG5B,EAAE,CAAC6B,aAAH,GAAmB,OADtC;AAEA,kBAAIM,UAAU,GAAGA,UAAU,IAAI,EAA/B;AACAA,cAAAA,UAAU,CAACC,IAAX,CAAgBjC,GAAhB;AACAA,cAAAA,GAAG,GAAG,EAAN;AAAU;;AACV,kBAAIH,EAAE,CAACqC,YAAH,KAAoB,KAAxB,EAA+B;AAC7BlC,gBAAAA,GAAG,IAAI,oBAAoB6B,aAAa,IAAI,MAArC,IAA+C,sCAA/C,GAAyFhC,EAAE,CAACsC,SAA5F,GAAyG,iBAAzG,GAA8HtC,EAAE,CAACO,IAAH,CAAQgC,cAAR,CAAuBX,cAAvB,CAA9H,GAAwK,uBAA/K;;AACA,oBAAI+B,YAAJ,EAAkB;AAChBxD,kBAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,iBAFD,MAEO;AACLlF,kBAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,gBAAAA,GAAG,IAAI,OAAP;;AACA,oBAAIH,EAAE,CAACgB,IAAH,CAAQwB,QAAR,KAAqB,KAAzB,EAAgC;AAC9BrC,kBAAAA,GAAG,IAAI,0BAAP;;AACA,sBAAIwD,YAAJ,EAAkB;AAChBxD,oBAAAA,GAAG,IAAI,KAAMsD,WAAW,CAAC4B,IAAZ,CAAiB,GAAjB,CAAb;AACD,mBAFD,MAEO;AACLlF,oBAAAA,GAAG,IAAI,KAAMsD,WAAb;AACD;;AACDtD,kBAAAA,GAAG,IAAI,KAAP;AACD;;AACD,oBAAIH,EAAE,CAACgB,IAAH,CAAQyB,OAAZ,EAAqB;AACnBtC,kBAAAA,GAAG,IAAI,+BAAgCsB,WAAhC,GAA+C,kCAA/C,GAAqFzB,EAAE,CAAC0B,UAAxF,GAAsG,WAAtG,GAAqHO,KAArH,GAA8H,GAArI;AACD;;AACD9B,gBAAAA,GAAG,IAAI,KAAP;AACD,eArBD,MAqBO;AACLA,gBAAAA,GAAG,IAAI,MAAP;AACD;;AACD,kBAAIuC,KAAK,GAAGvC,GAAZ;AACAA,cAAAA,GAAG,GAAGgC,UAAU,CAACQ,GAAX,EAAN;;AACA,kBAAI,CAAC3C,EAAE,CAAC4C,aAAJ,IAAqBd,aAAzB,EAAwC;AACtC;AACA,oBAAI9B,EAAE,CAACe,KAAP,EAAc;AACZZ,kBAAAA,GAAG,IAAI,iCAAkCuC,KAAlC,GAA2C,MAAlD;AACD,iBAFD,MAEO;AACLvC,kBAAAA,GAAG,IAAI,yBAA0BuC,KAA1B,GAAmC,mBAA1C;AACD;AACF,eAPD,MAOO;AACLvC,gBAAAA,GAAG,IAAI,gBAAiBuC,KAAjB,GAA0B,8EAAjC;AACD;;AACDvC,cAAAA,GAAG,IAAI,KAAP;AACD;AACF;;AACD,cAAI2B,aAAJ,EAAmB;AACjB3B,YAAAA,GAAG,IAAI,kBAAP;;AACA,gBAAI0C,IAAJ,EAAU;AACR1C,cAAAA,GAAG,IAAI,GAAP;AACD,aAFD,MAEO;AACLA,cAAAA,GAAG,IAAI,UAAWiB,IAAlB;AACD;;AACDjB,YAAAA,GAAG,IAAI,MAAP;AACAqD,YAAAA,eAAe,IAAI,GAAnB;AACD;AACF;AACF;AACF;AACF;;AACD,MAAI1B,aAAJ,EAAmB;AACjB3B,IAAAA,GAAG,IAAI,MAAOqD,eAAP,GAA0B,GAAjC;AACD;;AACD,MAAIX,IAAJ,EAAU;AACR,QAAIzC,MAAJ,EAAY;AACVD,MAAAA,GAAG,IAAI,4CAAP;AACAA,MAAAA,GAAG,IAAI,4CAAP;AACD,KAHD,MAGO;AACLA,MAAAA,GAAG,IAAI,8BAAP;AACAA,MAAAA,GAAG,IAAI,8BAAP;AACD;;AACDA,IAAAA,GAAG,IAAI,sBAAP;AACD,GATD,MASO;AACLA,IAAAA,GAAG,IAAI,UAAW+B,MAAX,GAAqB,qBAArB,GAA8Cd,IAA9C,GAAsD,GAA7D;AACD;;AACDjB,EAAAA,GAAG,GAAGH,EAAE,CAACO,IAAH,CAAQ+G,WAAR,CAAoBnH,GAApB,CAAN;;AACA,MAAI0C,IAAJ,EAAU;AACR1C,IAAAA,GAAG,GAAGH,EAAE,CAACO,IAAH,CAAQgH,gBAAR,CAAyBpH,GAAzB,EAA8BC,MAA9B,CAAN;AACD;;AAED,WAASwE,eAAT,CAAyBF,WAAzB,EAAsC;AACpC,QAAIqC,KAAK,GAAGrC,WAAW,CAACqC,KAAxB;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAAC9C,MAA1B,EAAkCuD,CAAC,EAAnC,EACE,IAAIL,cAAc,CAACJ,KAAK,CAACS,CAAD,CAAN,CAAlB,EAA8B,OAAO,IAAP;AACjC;;AAED,WAASL,cAAT,CAAwBH,KAAxB,EAA+B;AAC7B,WAAOhH,EAAE,CAACK,MAAH,CAAU2G,KAAK,CAACK,OAAhB,MAA6BjE,SAA7B,IAA2C4D,KAAK,CAACS,UAAN,IAAoBC,0BAA0B,CAACV,KAAD,CAAhG;AACD;;AAED,WAASU,0BAAT,CAAoCV,KAApC,EAA2C;AACzC,QAAIW,IAAI,GAAGX,KAAK,CAACS,UAAjB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAAC1D,MAAzB,EAAiCuD,CAAC,EAAlC,EACE,IAAIxH,EAAE,CAACK,MAAH,CAAUsH,IAAI,CAACH,CAAD,CAAd,MAAuBpE,SAA3B,EAAsC,OAAO,IAAP;AACzC;;AACD,SAAOjD,GAAP;AACD,CA/cD","sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined ';\n                    if (it.opts.useDefaults == 'empty') {\n                      out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                    }\n                    out += ' ) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined ';\n                    if (it.opts.useDefaults == 'empty') {\n                      out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                    }\n                    out += ' ) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}