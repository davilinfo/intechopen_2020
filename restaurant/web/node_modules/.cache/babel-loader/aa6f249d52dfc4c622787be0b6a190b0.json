{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davin.DESKTOP-83VQBDE\\\\Documents\\\\restaurant_sidechain\\\\web\\\\src\\\\components\\\\FormPayment.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css';\n\nconst cryptography = require('@liskhq/lisk-cryptography');\n\nconst FoodRequest = require(\"liskrestaurant_transactions\");\n\nfunction FormPayment({\n  onSubmit\n}, props) {\n  const [passphrase, setPassphrase] = useState('');\n  var orderstring = decodeURI(document.location.href.split(\"?\")[1]);\n\n  if (orderstring !== null && orderstring !== undefined) {\n    orderstring = orderstring.split(\"&\");\n  }\n  /*should be uncommented if is desired to sign transaction at frontend */\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const txFood = new FoodRequest({\n      asset: {\n        name: orderstring[2].split('=')[1],\n        description: orderstring[2].split('=')[1],\n        username: orderstring[5].split('=')[1],\n        phone: orderstring[6].split('=')[1],\n        deliveryaddress: orderstring[7].split('=')[1],\n        foodType: orderstring[3].split('=')[1]\n      },\n      amount: orderstring[1].split('=')[1].toString(),\n      recipientId: orderstring[0].split('=')[1],\n      //restaurant lisk address\n      timestamp: orderstring[4].split('=')[1]\n    });\n    txFood.sign(passphrase);\n    await onSubmit({\n      txFood\n    });\n    setPassphrase('');\n  }\n  /*\r\n  async function handleSubmit(e){\r\n      e.preventDefault();        \r\n      \r\n      const encryptedPassphrase =  cryptography.encryptPassphraseWithPassword(passphrase, 'luxuryRestaurant');\r\n        await onSubmit({                     \r\n          encryptedPassphrase\r\n      });\r\n      \r\n      setPassphrase('');        \r\n  }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Your Lisk Passphrase\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"passphrase\",\n    name: \"passphrase\",\n    required: true,\n    onChange: e => setPassphrase(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Order\")))));\n}\n\nexport default FormPayment;","map":{"version":3,"sources":["C:/Users/davin.DESKTOP-83VQBDE/Documents/restaurant_sidechain/web/src/components/FormPayment.js"],"names":["React","useState","useEffect","cryptography","require","FoodRequest","FormPayment","onSubmit","props","passphrase","setPassphrase","orderstring","decodeURI","document","location","href","split","undefined","handleSubmit","e","preventDefault","txFood","asset","name","description","username","phone","deliveryaddress","foodType","amount","toString","recipientId","timestamp","sign","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\nconst FoodRequest = require(\"liskrestaurant_transactions\");\r\n\r\nfunction FormPayment({onSubmit}, props){    \r\n    const [passphrase, setPassphrase] = useState('');    \r\n    \r\n    var orderstring = decodeURI(document.location.href.split(\"?\")[1]);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");                                      \r\n        }\r\n\r\n    /*should be uncommented if is desired to sign transaction at frontend */\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const txFood = new FoodRequest({\r\n            asset: {\r\n                name: orderstring[2].split('=')[1],\r\n                description: orderstring[2].split('=')[1],\r\n                username: orderstring[5].split('=')[1],\r\n                phone: orderstring[6].split('=')[1],\r\n                deliveryaddress: orderstring[7].split('=')[1],\r\n                foodType: orderstring[3].split('=')[1]\r\n            },\r\n            amount: orderstring[1].split('=')[1].toString(),\r\n            recipientId: orderstring[0].split('=')[1], //restaurant lisk address\r\n            timestamp: orderstring[4].split('=')[1]\r\n        });\r\n\r\n        txFood.sign(passphrase);                \r\n\r\n        await onSubmit({         \r\n            txFood            \r\n        });\r\n        \r\n        setPassphrase('');        \r\n    }\r\n\r\n    /*\r\n    async function handleSubmit(e){\r\n        e.preventDefault();        \r\n        \r\n        const encryptedPassphrase =  cryptography.encryptPassphraseWithPassword(passphrase, 'luxuryRestaurant');\r\n\r\n        await onSubmit({                     \r\n            encryptedPassphrase\r\n        });\r\n        \r\n        setPassphrase('');        \r\n    }*/\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>                                  \r\n                    <div>\r\n                        <label>Your Lisk Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"passphrase\" name=\"passphrase\" required onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble</label>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormPayment;"]},"metadata":{},"sourceType":"module"}