{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\n\nconst prepare_transaction_1 = require(\"./prepare_transaction\");\n\nconst time_1 = require(\"./time\");\n\nexports.signRawTransaction = ({\n  transaction,\n  passphrase,\n  secondPassphrase,\n  timeOffset\n}) => {\n  const {\n    publicKey,\n    address\n  } = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase);\n  const senderSecondPublicKey = secondPassphrase ? cryptography.getPrivateAndPublicKeyFromPassphrase(secondPassphrase).publicKey : undefined;\n  const propertiesToAdd = {\n    senderPublicKey: publicKey,\n    senderSecondPublicKey,\n    senderId: address,\n    timestamp: time_1.getTimeWithOffset(timeOffset)\n  };\n  const transactionWithProperties = Object.assign({}, transaction, propertiesToAdd);\n  return prepare_transaction_1.prepareTransaction(transactionWithProperties, passphrase, secondPassphrase);\n};","map":{"version":3,"sources":["../../src/utils/sign_raw_transaction.ts"],"names":[],"mappings":";;;;;;AAcA,MAAA,YAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,MAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAUa,OAAA,CAAA,kBAAA,GAAqB,CAAC;AAClC,EAAA,WADkC;AAElC,EAAA,UAFkC;AAGlC,EAAA,gBAHkC;AAIlC,EAAA;AAJkC,CAAD,KAKa;AAC9C,QAAM;AACL,IAAA,SADK;AAEL,IAAA;AAFK,MAGF,YAAY,CAAC,oCAAb,CAAkD,UAAlD,CAHJ;AAIA,QAAM,qBAAqB,GAAG,gBAAgB,GAC3C,YAAY,CAAC,oCAAb,CAAkD,gBAAlD,EACC,SAF0C,GAG3C,SAHH;AAKA,QAAM,eAAe,GAAG;AACvB,IAAA,eAAe,EAAE,SADM;AAEvB,IAAA,qBAFuB;AAGvB,IAAA,QAAQ,EAAE,OAHa;AAIvB,IAAA,SAAS,EAAE,MAAA,CAAA,iBAAA,CAAkB,UAAlB;AAJY,GAAxB;AAOA,QAAM,yBAAyB,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC3B,WAD2B,EAE3B,eAF2B,CAA/B;AAKA,SAAO,qBAAA,CAAA,kBAAA,CACN,yBADM,EAEN,UAFM,EAGN,gBAHM,CAAP;AAKA,CAhCY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\nconst prepare_transaction_1 = require(\"./prepare_transaction\");\nconst time_1 = require(\"./time\");\nexports.signRawTransaction = ({ transaction, passphrase, secondPassphrase, timeOffset, }) => {\n    const { publicKey, address, } = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase);\n    const senderSecondPublicKey = secondPassphrase\n        ? cryptography.getPrivateAndPublicKeyFromPassphrase(secondPassphrase)\n            .publicKey\n        : undefined;\n    const propertiesToAdd = {\n        senderPublicKey: publicKey,\n        senderSecondPublicKey,\n        senderId: address,\n        timestamp: time_1.getTimeWithOffset(timeOffset),\n    };\n    const transactionWithProperties = Object.assign({}, transaction, propertiesToAdd);\n    return prepare_transaction_1.prepareTransaction(transactionWithProperties, passphrase, secondPassphrase);\n};\n//# sourceMappingURL=sign_raw_transaction.js.map"]},"metadata":{},"sourceType":"script"}