{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davin.DESKTOP-83VQBDE\\\\Documents\\\\restaurant_sidechain\\\\web\\\\src\\\\components\\\\FoodOrderPayment.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport api from '../services/api';\nimport FormPayment from './FormPayment';\nimport '../styles.css';\n\nconst FoodRequest = require('liskrestaurant_transactions');\n\nconst liskTransactions = require('@liskhq/lisk-transactions');\n\nconst {\n  EPOCH_TIME\n} = require(\"@liskhq/lisk-constants\");\n\nfunction FoodOrderPayment(props) {\n  var [order, setOrder] = useState([]);\n\n  async function handleSubmit(data) {\n    var food = {};\n    var orderstring = props.orderstring;\n\n    if (orderstring !== null && orderstring !== undefined) {\n      orderstring = orderstring.split(\"&\");\n      food.recipientAddress = orderstring[0].split('=')[1];\n      food.amount = orderstring[1].split('=')[1];\n      food.name = orderstring[2].split('=')[1];\n      food.foodtype = orderstring[3].split('=')[1];\n      food.timestamp = orderstring[4].split('=')[1];\n      food.username = orderstring[5].split('=')[1];\n      food.phone = orderstring[6].split('=')[1];\n      food.deliveryaddress = orderstring[7].split('=')[1];\n      food.address = orderstring[8].split('=')[1];\n    }\n\n    var txFood = new FoodRequest({\n      asset: {\n        name: food.name,\n        description: food.name,\n        username: food.username,\n        phone: food.phone,\n        deliveryaddress: food.deliveryaddress,\n        foodType: food.foodtype\n      },\n      amount: food.amount,\n      senderPublicKey: '524f269a84946994ddbf75cbe5e1e7464c88eb38034984514a289aa4fe5110c3',\n      recipientId: food.address,\n      timestamp: food.timestamp\n    });\n    console.log();\n    console.log(txFood);\n\n    try {\n      txFood.sign(data);\n    } catch (e) {\n      console.log(e);\n    }\n\n    order = await api.post('/payment', JSON.stringify({\n      transaction: txFood,\n      networkid: \"identifier\"\n    }));\n    setOrder(order);\n    /*const transaction_result = (\r\n        <div className=\"recipes_topic\">                    \r\n            Testing             \r\n            <div className=\"clear\"></div>\r\n        </div>\r\n    )*/\n\n    const transaction_result = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipes_topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Transaction result: \", order.data.status, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), \"Transaction id: \", order.data.response.transaction.id, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), \"Paid Amount: LSK \", order.data.response.transaction.amount / 100000000, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), \"Payer LSK address: \", order.data.response.transaction.senderId, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), \"Restaurant LSK address: \", order.data.response.transaction.recipientId, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), \"Broadcast info: \", order.data.response.broadcastInfo.data.message, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n    ReactDOM.render(transaction_result, document.getElementById('content'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormPayment, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default FoodOrderPayment;","map":{"version":3,"sources":["C:/Users/davin.DESKTOP-83VQBDE/Documents/restaurant_sidechain/web/src/components/FoodOrderPayment.js"],"names":["React","useState","useEffect","ReactDOM","api","FormPayment","FoodRequest","require","liskTransactions","EPOCH_TIME","FoodOrderPayment","props","order","setOrder","handleSubmit","data","food","orderstring","undefined","split","recipientAddress","amount","name","foodtype","timestamp","username","phone","deliveryaddress","address","txFood","asset","description","foodType","senderPublicKey","recipientId","console","log","sign","e","post","JSON","stringify","transaction","networkid","transaction_result","status","response","id","senderId","broadcastInfo","message","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormPayment from './FormPayment';\r\nimport '../styles.css';\r\nconst FoodRequest = require('liskrestaurant_transactions');\r\nconst liskTransactions = require('@liskhq/lisk-transactions');\r\nconst { EPOCH_TIME } = require (\"@liskhq/lisk-constants\");\r\n\r\nfunction FoodOrderPayment(props){                   \r\n    \r\n    var [order, setOrder] = useState([]);                    \r\n\r\n    async function handleSubmit(data){      \r\n\r\n        var food = {};\r\n        var orderstring = props.orderstring;\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");\r\n                \r\n            food.recipientAddress = orderstring[0].split('=')[1];\r\n            food.amount = orderstring[1].split('=')[1];\r\n            food.name = orderstring[2].split('=')[1];\r\n            food.foodtype = orderstring[3].split('=')[1];\r\n            food.timestamp = orderstring[4].split('=')[1];\r\n            food.username = orderstring[5].split('=')[1];\r\n            food.phone = orderstring[6].split('=')[1];\r\n            food.deliveryaddress = orderstring[7].split('=')[1];   \r\n            food.address = orderstring[8].split('=')[1];\r\n        }        \r\n        \r\n        var txFood = new FoodRequest({            \r\n            asset: {\r\n                name: food.name,\r\n                description: food.name,\r\n                username: food.username,\r\n                phone: food.phone,\r\n                deliveryaddress: food.deliveryaddress,\r\n                foodType: food.foodtype\r\n            },\r\n            amount: food.amount,\r\n            senderPublicKey: '524f269a84946994ddbf75cbe5e1e7464c88eb38034984514a289aa4fe5110c3',\r\n            recipientId: food.address,\r\n            timestamp: food.timestamp\r\n        });                            \r\n        \r\n        console.log();\r\n\r\n        console.log(txFood);\r\n\r\n        try{\r\n            txFood.sign(data);            \r\n            \r\n        }catch(e){\r\n            console.log(e);\r\n        }                \r\n        \r\n        order = await api.post('/payment', JSON.stringify({ transaction: txFood, networkid: \"identifier\"}) );   \r\n        setOrder(order);    \r\n        \r\n        /*const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                Testing             \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        )*/\r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                Transaction result: {order.data.status}\r\n                <br />\r\n                Transaction id: {order.data.response.transaction.id}\r\n                <br/>\r\n                Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                <br/>\r\n                Payer LSK address: {order.data.response.transaction.senderId}\r\n                <br/>\r\n                Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                <br/>\r\n                Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }        \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormPayment onSubmit={handleSubmit}></FormPayment>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrderPayment;"]},"metadata":{},"sourceType":"module"}