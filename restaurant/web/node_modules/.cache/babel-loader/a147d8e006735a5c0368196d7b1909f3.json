{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\n\nconst utils_1 = require(\"./utils\");\n\nexports.createSignatureObject = (transaction, passphrase) => {\n  if (!utils_1.verifyTransaction(transaction)) {\n    throw new Error('Invalid transaction.');\n  }\n\n  if (!transaction.id) {\n    throw new Error('Transaction ID is required to create a signature object.');\n  }\n\n  const {\n    publicKey\n  } = cryptography.getPrivateAndPublicKeyFromPassphrase(passphrase);\n  return {\n    transactionId: transaction.id,\n    publicKey,\n    signature: utils_1.multiSignTransaction(transaction, passphrase)\n  };\n};","map":{"version":3,"sources":["../src/create_signature_object.ts"],"names":[],"mappings":";;;;;;AAcA,MAAA,YAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAQa,OAAA,CAAA,qBAAA,GAAwB,CACpC,WADoC,EAEpC,UAFoC,KAGhB;AACpB,MAAI,CAAC,OAAA,CAAA,iBAAA,CAAkB,WAAlB,CAAL,EAAqC;AACpC,UAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,MAAI,CAAC,WAAW,CAAC,EAAjB,EAAqB;AACpB,UAAM,IAAI,KAAJ,CAAU,0DAAV,CAAN;AACA;;AAED,QAAM;AAAE,IAAA;AAAF,MAAgB,YAAY,CAAC,oCAAb,CACrB,UADqB,CAAtB;AAIA,SAAO;AACN,IAAA,aAAa,EAAE,WAAW,CAAC,EADrB;AAEN,IAAA,SAFM;AAGN,IAAA,SAAS,EAAE,OAAA,CAAA,oBAAA,CAAqB,WAArB,EAAkC,UAAlC;AAHL,GAAP;AAKA,CArBY","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cryptography = require(\"@liskhq/lisk-cryptography\");\r\nconst utils_1 = require(\"./utils\");\r\nexports.createSignatureObject = (transaction, passphrase) => {\r\n    if (!utils_1.verifyTransaction(transaction)) {\r\n        throw new Error('Invalid transaction.');\r\n    }\r\n    if (!transaction.id) {\r\n        throw new Error('Transaction ID is required to create a signature object.');\r\n    }\r\n    const { publicKey } = cryptography.getPrivateAndPublicKeyFromPassphrase(passphrase);\r\n    return {\r\n        transactionId: transaction.id,\r\n        publicKey,\r\n        signature: utils_1.multiSignTransaction(transaction, passphrase),\r\n    };\r\n};\r\n//# sourceMappingURL=create_signature_object.js.map"]},"metadata":{},"sourceType":"script"}