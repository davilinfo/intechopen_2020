{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _5_dapp_transaction_1 = require(\"./5_dapp_transaction\");\n\nvar constants_1 = require(\"./constants\");\n\nvar utils_1 = require(\"./utils\");\n\nvar validateInputs = function validateInputs(_ref) {\n  var options = _ref.options;\n\n  if (typeof options !== 'object') {\n    throw new Error('Options must be an object.');\n  }\n\n  var category = options.category,\n      name = options.name,\n      type = options.type,\n      link = options.link,\n      description = options.description,\n      tags = options.tags,\n      icon = options.icon;\n\n  if (!utils_1.isValidInteger(category)) {\n    throw new Error('Dapp category must be an integer.');\n  }\n\n  if (typeof name !== 'string') {\n    throw new Error('Dapp name must be a string.');\n  }\n\n  if (!utils_1.isValidInteger(type)) {\n    throw new Error('Dapp type must be an integer.');\n  }\n\n  if (typeof link !== 'string') {\n    throw new Error('Dapp link must be a string.');\n  }\n\n  if (typeof description !== 'undefined' && typeof description !== 'string') {\n    throw new Error('Dapp description must be a string if provided.');\n  }\n\n  if (typeof tags !== 'undefined' && typeof tags !== 'string') {\n    throw new Error('Dapp tags must be a string if provided.');\n  }\n\n  if (typeof icon !== 'undefined' && typeof icon !== 'string') {\n    throw new Error('Dapp icon must be a string if provided.');\n  }\n};\n\nexports.createDapp = function (inputs) {\n  validateInputs(inputs);\n  var passphrase = inputs.passphrase,\n      secondPassphrase = inputs.secondPassphrase,\n      options = inputs.options;\n  var transaction = Object.assign({}, utils_1.createBaseTransaction(inputs), {\n    type: 5,\n    fee: constants_1.DAPP_FEE.toString(),\n    asset: {\n      dapp: options\n    }\n  });\n\n  if (!passphrase) {\n    return transaction;\n  }\n\n  var transactionWithSenderInfo = Object.assign({}, transaction, {\n    senderId: transaction.senderId,\n    senderPublicKey: transaction.senderPublicKey\n  });\n  var dappTransaction = new _5_dapp_transaction_1.DappTransaction(transactionWithSenderInfo);\n  dappTransaction.sign(passphrase, secondPassphrase);\n  return dappTransaction.toJSON();\n};","map":{"version":3,"sources":["../src/5_create_dapp.ts"],"names":[],"mappings":";;;;;;AAcA,IAAA,qBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAmBA,IAAM,cAAc,GAAG,SAAjB,cAAiB,OAAkC;AAAA,MAA/B,OAA+B,QAA/B,OAA+B;;AACxD,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACA;;AAHuD,MAIhD,QAJgD,GAIQ,OAJR,CAIhD,QAJgD;AAAA,MAItC,IAJsC,GAIQ,OAJR,CAItC,IAJsC;AAAA,MAIhC,IAJgC,GAIQ,OAJR,CAIhC,IAJgC;AAAA,MAI1B,IAJ0B,GAIQ,OAJR,CAI1B,IAJ0B;AAAA,MAIpB,WAJoB,GAIQ,OAJR,CAIpB,WAJoB;AAAA,MAIP,IAJO,GAIQ,OAJR,CAIP,IAJO;AAAA,MAID,IAJC,GAIQ,OAJR,CAID,IAJC;;AAMxD,MAAI,CAAC,OAAA,CAAA,cAAA,CAAe,QAAf,CAAL,EAA+B;AAC9B,UAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACA;;AACD,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC7B,UAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACA;;AACD,MAAI,CAAC,OAAA,CAAA,cAAA,CAAe,IAAf,CAAL,EAA2B;AAC1B,UAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACA;;AACD,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC7B,UAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACA;;AAED,MAAI,OAAO,WAAP,KAAuB,WAAvB,IAAsC,OAAO,WAAP,KAAuB,QAAjE,EAA2E;AAC1E,UAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACA;;AAED,MAAI,OAAO,IAAP,KAAgB,WAAhB,IAA+B,OAAO,IAAP,KAAgB,QAAnD,EAA6D;AAC5D,UAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACA;;AAED,MAAI,OAAO,IAAP,KAAgB,WAAhB,IAA+B,OAAO,IAAP,KAAgB,QAAnD,EAA6D;AAC5D,UAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACA;AACD,CA9BD;;AAgCa,OAAA,CAAA,UAAA,GAAa,UAAC,MAAD,EAAiD;AAC1E,EAAA,cAAc,CAAC,MAAD,CAAd;AAD0E,MAElE,UAFkE,GAExB,MAFwB,CAElE,UAFkE;AAAA,MAEtD,gBAFsD,GAExB,MAFwB,CAEtD,gBAFsD;AAAA,MAEpC,OAFoC,GAExB,MAFwB,CAEpC,OAFoC;AAI1E,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACb,OAAA,CAAA,qBAAA,CAAsB,MAAtB,CADa,EACgB;AAChC,IAAA,IAAI,EAAE,CAD0B;AAEhC,IAAA,GAAG,EAAE,WAAA,CAAA,QAAA,CAAS,QAAT,EAF2B;AAGhC,IAAA,KAAK,EAAE;AACN,MAAA,IAAI,EAAE;AADA;AAHyB,GADhB,CAAjB;;AASA,MAAI,CAAC,UAAL,EAAiB;AAChB,WAAO,WAAP;AACA;;AAED,MAAM,yBAAyB,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC3B,WAD2B,EAChB;AACd,IAAA,QAAQ,EAAE,WAAW,CAAC,QADR;AAEd,IAAA,eAAe,EAAE,WAAW,CAAC;AAFf,GADgB,CAA/B;AAMA,MAAM,eAAe,GAAG,IAAI,qBAAA,CAAA,eAAJ,CAAoB,yBAApB,CAAxB;AACA,EAAA,eAAe,CAAC,IAAhB,CAAqB,UAArB,EAAiC,gBAAjC;AAEA,SAAO,eAAe,CAAC,MAAhB,EAAP;AACA,CA3BY","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _5_dapp_transaction_1 = require(\"./5_dapp_transaction\");\r\nconst constants_1 = require(\"./constants\");\r\nconst utils_1 = require(\"./utils\");\r\nconst validateInputs = ({ options }) => {\r\n    if (typeof options !== 'object') {\r\n        throw new Error('Options must be an object.');\r\n    }\r\n    const { category, name, type, link, description, tags, icon } = options;\r\n    if (!utils_1.isValidInteger(category)) {\r\n        throw new Error('Dapp category must be an integer.');\r\n    }\r\n    if (typeof name !== 'string') {\r\n        throw new Error('Dapp name must be a string.');\r\n    }\r\n    if (!utils_1.isValidInteger(type)) {\r\n        throw new Error('Dapp type must be an integer.');\r\n    }\r\n    if (typeof link !== 'string') {\r\n        throw new Error('Dapp link must be a string.');\r\n    }\r\n    if (typeof description !== 'undefined' && typeof description !== 'string') {\r\n        throw new Error('Dapp description must be a string if provided.');\r\n    }\r\n    if (typeof tags !== 'undefined' && typeof tags !== 'string') {\r\n        throw new Error('Dapp tags must be a string if provided.');\r\n    }\r\n    if (typeof icon !== 'undefined' && typeof icon !== 'string') {\r\n        throw new Error('Dapp icon must be a string if provided.');\r\n    }\r\n};\r\nexports.createDapp = (inputs) => {\r\n    validateInputs(inputs);\r\n    const { passphrase, secondPassphrase, options } = inputs;\r\n    const transaction = Object.assign({}, utils_1.createBaseTransaction(inputs), { type: 5, fee: constants_1.DAPP_FEE.toString(), asset: {\r\n            dapp: options,\r\n        } });\r\n    if (!passphrase) {\r\n        return transaction;\r\n    }\r\n    const transactionWithSenderInfo = Object.assign({}, transaction, { senderId: transaction.senderId, senderPublicKey: transaction.senderPublicKey });\r\n    const dappTransaction = new _5_dapp_transaction_1.DappTransaction(transactionWithSenderInfo);\r\n    dappTransaction.sign(passphrase, secondPassphrase);\r\n    return dappTransaction.toJSON();\r\n};\r\n//# sourceMappingURL=5_create_dapp.js.map"]},"metadata":{},"sourceType":"script"}