{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Ajv = require(\"ajv\");\n\nconst formats = require(\"./formats\");\n\nclass LiskValidator {\n  constructor() {\n    this.validator = new Ajv({\n      allErrors: true,\n      schemaId: 'auto',\n      useDefaults: false\n    });\n\n    for (const formatName of Object.keys(formats)) {\n      this.validator.addFormat(formatName, formats[formatName]);\n    }\n\n    this.validator.addKeyword('uniqueSignedPublicKeys', {\n      type: 'array',\n      compile: () => data => new Set(data.filter(datum => typeof datum === 'string').map(key => key.slice(1))).size === data.length\n    });\n  }\n\n  validate(schema, data) {\n    if (!this.validator.validate(schema, data)) {\n      return this.validator.errors;\n    }\n\n    return [];\n  }\n\n}\n\nexports.validator = new LiskValidator();","map":{"version":3,"sources":["../src/lisk_validator.ts"],"names":[],"mappings":";;;;;;AAeA,MAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAIA,MAAM,aAAN,CAAmB;AAElB,EAAA,WAAA,GAAA;AACC,SAAK,SAAL,GAAiB,IAAI,GAAJ,CAAQ;AACxB,MAAA,SAAS,EAAE,IADa;AAExB,MAAA,QAAQ,EAAE,MAFc;AAGxB,MAAA,WAAW,EAAE;AAHW,KAAR,CAAjB;;AAMA,SAAK,MAAM,UAAX,IAAyB,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAzB,EAA+C;AAC9C,WAAK,SAAL,CAAe,SAAf,CACC,UADD,EAEC,OAAO,CAAC,UAAD,CAFR;AAIA;;AAED,SAAK,SAAL,CAAe,UAAf,CAA0B,wBAA1B,EAAoD;AACnD,MAAA,IAAI,EAAE,OAD6C;AAEnD,MAAA,OAAO,EAAE,MAAO,IAAD,IACd,IAAI,GAAJ,CACC,IAAI,CACF,MADF,CACS,KAAK,IAAI,OAAO,KAAP,KAAiB,QADnC,EAEE,GAFF,CAEO,GAAD,IAAiB,GAAG,CAAC,KAAJ,CAAU,CAAV,CAFvB,CADD,EAIE,IAJF,KAIW,IAAI,CAAC;AAPkC,KAApD;AASA;;AAEM,EAAA,QAAQ,CAAC,MAAD,EAAiB,IAAjB,EAA6B;AAC3C,QAAI,CAAC,KAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,EAAgC,IAAhC,CAAL,EAA4C;AAC3C,aAAO,KAAK,SAAL,CAAe,MAAtB;AACA;;AAED,WAAO,EAAP;AACA;;AAjCiB;;AAoCN,OAAA,CAAA,SAAA,GAAY,IAAI,aAAJ,EAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Ajv = require(\"ajv\");\nconst formats = require(\"./formats\");\nclass LiskValidator {\n    constructor() {\n        this.validator = new Ajv({\n            allErrors: true,\n            schemaId: 'auto',\n            useDefaults: false,\n        });\n        for (const formatName of Object.keys(formats)) {\n            this.validator.addFormat(formatName, formats[formatName]);\n        }\n        this.validator.addKeyword('uniqueSignedPublicKeys', {\n            type: 'array',\n            compile: () => (data) => new Set(data\n                .filter(datum => typeof datum === 'string')\n                .map((key) => key.slice(1))).size === data.length,\n        });\n    }\n    validate(schema, data) {\n        if (!this.validator.validate(schema, data)) {\n            return this.validator.errors;\n        }\n        return [];\n    }\n}\nexports.validator = new LiskValidator();\n//# sourceMappingURL=lisk_validator.js.map"]},"metadata":{},"sourceType":"script"}