{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar os = require('os'); // Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\n\n\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require; // eslint-disable-line\n\nvar vars = process.config && process.config.variables || {};\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY;\nvar abi = process.versions.modules; // TODO: support old node where this is undef\n\nvar runtime = isElectron() ? 'electron' : 'node';\nvar arch = os.arch();\nvar platform = os.platform();\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc');\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || '';\nvar uv = (process.versions.uv || '').split('.')[0];\nmodule.exports = load;\n\nfunction load(dir) {\n  return runtimeRequire(load.path(dir));\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.');\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_');\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD'];\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild);\n    if (release) return release;\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild);\n    if (debug) return debug;\n  }\n\n  var prebuild = resolve(dir);\n  if (prebuild) return prebuild;\n  var nearby = resolve(path.dirname(process.execPath));\n  if (nearby) return nearby;\n  var target = ['platform=' + platform, 'arch=' + arch, 'runtime=' + runtime, 'abi=' + abi, 'uv=' + uv, armv ? 'armv=' + armv : '', 'libc=' + libc].filter(Boolean).join(' ');\n  throw new Error('No native build was found for ' + target);\n\n  function resolve(dir) {\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', platform + '-' + arch);\n    var parsed = readdirSync(prebuilds).map(parseTags);\n    var candidates = parsed.filter(matchTags(runtime, abi));\n    var winner = candidates.sort(compareTags(runtime))[0];\n    if (winner) return path.join(prebuilds, winner.file);\n  }\n};\n\nfunction readdirSync(dir) {\n  try {\n    return fs.readdirSync(dir);\n  } catch (err) {\n    return [];\n  }\n}\n\nfunction getFirst(dir, filter) {\n  var files = readdirSync(dir).filter(filter);\n  return files[0] && path.join(dir, files[0]);\n}\n\nfunction matchBuild(name) {\n  return /\\.node$/.test(name);\n}\n\nfunction parseTags(file) {\n  var arr = file.split('.');\n  var extension = arr.pop();\n  var tags = {\n    file: file,\n    specificity: 0\n  };\n  if (extension !== 'node') return;\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i];\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag;\n    } else if (tag === 'napi') {\n      tags.napi = true;\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3);\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2);\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4);\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag;\n    } else {\n      continue;\n    }\n\n    tags.specificity++;\n  }\n\n  return tags;\n}\n\nfunction matchTags(runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false;\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false;\n    if (tags.abi !== abi && !tags.napi) return false;\n    if (tags.uv && tags.uv !== uv) return false;\n    if (tags.armv && tags.armv !== armv) return false;\n    if (tags.libc && tags.libc !== libc) return false;\n    return true;\n  };\n}\n\nfunction runtimeAgnostic(tags) {\n  return tags.runtime === 'node' && tags.napi;\n}\n\nfunction compareTags(runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1;\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1;\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1;\n    } else {\n      return 0;\n    }\n  };\n}\n\nfunction isElectron() {\n  if (process.versions && process.versions.electron) return true;\n  if (process.env.ELECTRON_RUN_AS_NODE) return true;\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer';\n}\n\nfunction isAlpine(platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release');\n} // Exposed for unit tests\n// TODO: move to lib\n\n\nload.parseTags = parseTags;\nload.matchTags = matchTags;\nload.compareTags = compareTags;","map":{"version":3,"sources":["C:/PoC/restaurant_sidechain/web/node_modules/node-gyp-build/index.js"],"names":["fs","require","path","os","runtimeRequire","__webpack_require__","__non_webpack_require__","vars","process","config","variables","prebuildsOnly","env","PREBUILDS_ONLY","abi","versions","modules","runtime","isElectron","arch","platform","libc","LIBC","isAlpine","armv","ARM_VERSION","arm_version","uv","split","module","exports","load","dir","resolve","name","join","toUpperCase","replace","err","release","getFirst","matchBuild","debug","prebuild","nearby","dirname","execPath","target","filter","Boolean","Error","prebuilds","parsed","readdirSync","map","parseTags","candidates","matchTags","winner","sort","compareTags","file","files","test","arr","extension","pop","tags","specificity","i","length","tag","napi","slice","runtimeAgnostic","a","b","electron","ELECTRON_RUN_AS_NODE","window","type","existsSync"],"mappings":"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","sourcesContent":["var fs = require('fs')\r\nvar path = require('path')\r\nvar os = require('os')\r\n\r\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\r\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\r\n\r\nvar vars = (process.config && process.config.variables) || {}\r\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\r\nvar abi = process.versions.modules // TODO: support old node where this is undef\r\nvar runtime = isElectron() ? 'electron' : 'node'\r\nvar arch = os.arch()\r\nvar platform = os.platform()\r\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\r\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\r\nvar uv = (process.versions.uv || '').split('.')[0]\r\n\r\nmodule.exports = load\r\n\r\nfunction load (dir) {\r\n  return runtimeRequire(load.path(dir))\r\n}\r\n\r\nload.path = function (dir) {\r\n  dir = path.resolve(dir || '.')\r\n\r\n  try {\r\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\r\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\r\n  } catch (err) {}\r\n\r\n  if (!prebuildsOnly) {\r\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\r\n    if (release) return release\r\n\r\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\r\n    if (debug) return debug\r\n  }\r\n\r\n  var prebuild = resolve(dir)\r\n  if (prebuild) return prebuild\r\n\r\n  var nearby = resolve(path.dirname(process.execPath))\r\n  if (nearby) return nearby\r\n\r\n  var target = [\r\n    'platform=' + platform,\r\n    'arch=' + arch,\r\n    'runtime=' + runtime,\r\n    'abi=' + abi,\r\n    'uv=' + uv,\r\n    armv ? 'armv=' + armv : '',\r\n    'libc=' + libc\r\n  ].filter(Boolean).join(' ')\r\n\r\n  throw new Error('No native build was found for ' + target)\r\n\r\n  function resolve (dir) {\r\n    // Find most specific flavor first\r\n    var prebuilds = path.join(dir, 'prebuilds', platform + '-' + arch)\r\n    var parsed = readdirSync(prebuilds).map(parseTags)\r\n    var candidates = parsed.filter(matchTags(runtime, abi))\r\n    var winner = candidates.sort(compareTags(runtime))[0]\r\n    if (winner) return path.join(prebuilds, winner.file)\r\n  }\r\n}\r\n\r\nfunction readdirSync (dir) {\r\n  try {\r\n    return fs.readdirSync(dir)\r\n  } catch (err) {\r\n    return []\r\n  }\r\n}\r\n\r\nfunction getFirst (dir, filter) {\r\n  var files = readdirSync(dir).filter(filter)\r\n  return files[0] && path.join(dir, files[0])\r\n}\r\n\r\nfunction matchBuild (name) {\r\n  return /\\.node$/.test(name)\r\n}\r\n\r\nfunction parseTags (file) {\r\n  var arr = file.split('.')\r\n  var extension = arr.pop()\r\n  var tags = { file: file, specificity: 0 }\r\n\r\n  if (extension !== 'node') return\r\n\r\n  for (var i = 0; i < arr.length; i++) {\r\n    var tag = arr[i]\r\n\r\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\r\n      tags.runtime = tag\r\n    } else if (tag === 'napi') {\r\n      tags.napi = true\r\n    } else if (tag.slice(0, 3) === 'abi') {\r\n      tags.abi = tag.slice(3)\r\n    } else if (tag.slice(0, 2) === 'uv') {\r\n      tags.uv = tag.slice(2)\r\n    } else if (tag.slice(0, 4) === 'armv') {\r\n      tags.armv = tag.slice(4)\r\n    } else if (tag === 'glibc' || tag === 'musl') {\r\n      tags.libc = tag\r\n    } else {\r\n      continue\r\n    }\r\n\r\n    tags.specificity++\r\n  }\r\n\r\n  return tags\r\n}\r\n\r\nfunction matchTags (runtime, abi) {\r\n  return function (tags) {\r\n    if (tags == null) return false\r\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\r\n    if (tags.abi !== abi && !tags.napi) return false\r\n    if (tags.uv && tags.uv !== uv) return false\r\n    if (tags.armv && tags.armv !== armv) return false\r\n    if (tags.libc && tags.libc !== libc) return false\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nfunction runtimeAgnostic (tags) {\r\n  return tags.runtime === 'node' && tags.napi\r\n}\r\n\r\nfunction compareTags (runtime) {\r\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\r\n  return function (a, b) {\r\n    if (a.runtime !== b.runtime) {\r\n      return a.runtime === runtime ? -1 : 1\r\n    } else if (a.abi !== b.abi) {\r\n      return a.abi ? -1 : 1\r\n    } else if (a.specificity !== b.specificity) {\r\n      return a.specificity > b.specificity ? -1 : 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\nfunction isElectron () {\r\n  if (process.versions && process.versions.electron) return true\r\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\r\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\r\n}\r\n\r\nfunction isAlpine (platform) {\r\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\r\n}\r\n\r\n// Exposed for unit tests\r\n// TODO: move to lib\r\nload.parseTags = parseTags\r\nload.matchTags = matchTags\r\nload.compareTags = compareTags\r\n"]},"metadata":{},"sourceType":"script"}