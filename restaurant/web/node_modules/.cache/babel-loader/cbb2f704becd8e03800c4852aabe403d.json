{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _2_delegate_transaction_1 = require(\"./2_delegate_transaction\");\n\nconst constants_1 = require(\"./constants\");\n\nconst utils_1 = require(\"./utils\");\n\nconst validateInputs = ({\n  username\n}) => {\n  if (!username || typeof username !== 'string') {\n    throw new Error('Please provide a username. Expected string.');\n  }\n\n  if (username.length > constants_1.USERNAME_MAX_LENGTH) {\n    throw new Error(`Username length does not match requirements. Expected to be no more than ${constants_1.USERNAME_MAX_LENGTH} characters.`);\n  }\n};\n\nexports.registerDelegate = inputs => {\n  validateInputs(inputs);\n  const {\n    username,\n    passphrase,\n    secondPassphrase\n  } = inputs;\n\n  if (!username || typeof username !== 'string') {\n    throw new Error('Please provide a username. Expected string.');\n  }\n\n  if (username.length > constants_1.USERNAME_MAX_LENGTH) {\n    throw new Error(`Username length does not match requirements. Expected to be no more than ${constants_1.USERNAME_MAX_LENGTH} characters.`);\n  }\n\n  const transaction = Object.assign({}, utils_1.createBaseTransaction(inputs), {\n    type: 2,\n    fee: constants_1.DELEGATE_FEE.toString(),\n    asset: {\n      delegate: {\n        username\n      }\n    }\n  });\n\n  if (!passphrase) {\n    return transaction;\n  }\n\n  const delegateTransaction = new _2_delegate_transaction_1.DelegateTransaction(transaction);\n  delegateTransaction.sign(passphrase, secondPassphrase);\n  return delegateTransaction.toJSON();\n};","map":{"version":3,"sources":["../src/2_register_delegate.ts"],"names":[],"mappings":";;;;;;AAcA,MAAA,yBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AASA,MAAM,cAAc,GAAG,CAAC;AAAE,EAAA;AAAF,CAAD,KAAsD;AAC5E,MAAI,CAAC,QAAD,IAAa,OAAO,QAAP,KAAoB,QAArC,EAA+C;AAC9C,UAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAED,MAAI,QAAQ,CAAC,MAAT,GAAkB,WAAA,CAAA,mBAAtB,EAA2C;AAC1C,UAAM,IAAI,KAAJ,CACL,4EAA4E,WAAA,CAAA,mBAAmB,cAD1F,CAAN;AAGA;AACD,CAVD;;AAYa,OAAA,CAAA,gBAAA,GACZ,MAD+B,IAEF;AAC7B,EAAA,cAAc,CAAC,MAAD,CAAd;AACA,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA,UAAZ;AAAwB,IAAA;AAAxB,MAA6C,MAAnD;;AAEA,MAAI,CAAC,QAAD,IAAa,OAAO,QAAP,KAAoB,QAArC,EAA+C;AAC9C,UAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAED,MAAI,QAAQ,CAAC,MAAT,GAAkB,WAAA,CAAA,mBAAtB,EAA2C;AAC1C,UAAM,IAAI,KAAJ,CACL,4EAA4E,WAAA,CAAA,mBAAmB,cAD1F,CAAN;AAGA;;AAED,QAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACb,OAAA,CAAA,qBAAA,CAAsB,MAAtB,CADa,EACgB;AAChC,IAAA,IAAI,EAAE,CAD0B;AAEhC,IAAA,GAAG,EAAE,WAAA,CAAA,YAAA,CAAa,QAAb,EAF2B;AAGhC,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAE;AAAE,QAAA;AAAF;AAAZ;AAHyB,GADhB,CAAjB;;AAOA,MAAI,CAAC,UAAL,EAAiB;AAChB,WAAO,WAAP;AACA;;AAED,QAAM,mBAAmB,GAAG,IAAI,yBAAA,CAAA,mBAAJ,CAC3B,WAD2B,CAA5B;AAGA,EAAA,mBAAmB,CAAC,IAApB,CAAyB,UAAzB,EAAqC,gBAArC;AAEA,SAAO,mBAAmB,CAAC,MAApB,EAAP;AACA,CAjCY","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _2_delegate_transaction_1 = require(\"./2_delegate_transaction\");\r\nconst constants_1 = require(\"./constants\");\r\nconst utils_1 = require(\"./utils\");\r\nconst validateInputs = ({ username }) => {\r\n    if (!username || typeof username !== 'string') {\r\n        throw new Error('Please provide a username. Expected string.');\r\n    }\r\n    if (username.length > constants_1.USERNAME_MAX_LENGTH) {\r\n        throw new Error(`Username length does not match requirements. Expected to be no more than ${constants_1.USERNAME_MAX_LENGTH} characters.`);\r\n    }\r\n};\r\nexports.registerDelegate = (inputs) => {\r\n    validateInputs(inputs);\r\n    const { username, passphrase, secondPassphrase } = inputs;\r\n    if (!username || typeof username !== 'string') {\r\n        throw new Error('Please provide a username. Expected string.');\r\n    }\r\n    if (username.length > constants_1.USERNAME_MAX_LENGTH) {\r\n        throw new Error(`Username length does not match requirements. Expected to be no more than ${constants_1.USERNAME_MAX_LENGTH} characters.`);\r\n    }\r\n    const transaction = Object.assign({}, utils_1.createBaseTransaction(inputs), { type: 2, fee: constants_1.DELEGATE_FEE.toString(), asset: { delegate: { username } } });\r\n    if (!passphrase) {\r\n        return transaction;\r\n    }\r\n    const delegateTransaction = new _2_delegate_transaction_1.DelegateTransaction(transaction);\r\n    delegateTransaction.sign(passphrase, secondPassphrase);\r\n    return delegateTransaction.toJSON();\r\n};\r\n//# sourceMappingURL=2_register_delegate.js.map"]},"metadata":{},"sourceType":"script"}