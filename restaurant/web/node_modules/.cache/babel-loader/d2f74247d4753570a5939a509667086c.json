{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transaction = {\n  $id: 'lisk/transaction',\n  type: 'object',\n  required: ['type', 'amount', 'fee', 'senderPublicKey', 'timestamp'],\n  properties: {\n    id: {\n      type: 'string'\n    },\n    blockId: {\n      type: 'string'\n    },\n    amount: {\n      type: ['string', 'integer']\n    },\n    fee: {\n      type: ['string', 'integer']\n    },\n    type: {\n      type: 'integer'\n    },\n    timestamp: {\n      type: 'integer'\n    },\n    senderId: {\n      type: 'string'\n    },\n    senderPublicKey: {\n      type: 'string'\n    },\n    recipientId: {\n      type: ['string', 'null']\n    },\n    recipientPublicKey: {\n      type: ['string', 'null']\n    },\n    signature: {\n      type: 'string'\n    },\n    signSignature: {\n      type: 'string'\n    },\n    signatures: {\n      type: 'array'\n    },\n    asset: {\n      type: 'object'\n    },\n    receivedAt: {\n      type: 'string'\n    }\n  }\n};\nexports.transactionInterface = {\n  required: ['toJSON', 'isReady', 'getBytes', 'validate', 'verifyAgainstOtherTransactions', 'apply', 'undo', 'prepare', 'addMultisignature', 'addVerifiedMultisignature', 'isExpired', 'fromSync'],\n  properties: {\n    toJSON: {\n      typeof: 'function'\n    },\n    isReady: {\n      typeof: 'function'\n    },\n    getBytes: {\n      typeof: 'function'\n    },\n    validate: {\n      typeof: 'function'\n    },\n    verifyAgainstOtherTransactions: {\n      typeof: 'function'\n    },\n    apply: {\n      typeof: 'function'\n    },\n    undo: {\n      typeof: 'function'\n    },\n    prepare: {\n      typeof: 'function'\n    },\n    addMultisignature: {\n      typeof: 'function'\n    },\n    addVerifiedMultisignature: {\n      typeof: 'function'\n    },\n    processMultisignatures: {\n      typeof: 'function'\n    },\n    isExpired: {\n      typeof: 'function'\n    },\n    fromSync: {\n      typeof: 'function'\n    }\n  }\n};\nexports.baseTransaction = {\n  $id: 'lisk/base-transaction',\n  type: 'object',\n  required: ['id', 'type', 'amount', 'fee', 'senderPublicKey', 'timestamp', 'asset', 'signature'],\n  properties: {\n    id: {\n      type: 'string',\n      format: 'id'\n    },\n    blockId: {\n      type: 'string',\n      format: 'id'\n    },\n    height: {\n      type: 'integer',\n      minimum: 0\n    },\n    confirmations: {\n      type: 'integer',\n      minimum: 0\n    },\n    amount: {\n      type: 'string',\n      format: 'amount'\n    },\n    fee: {\n      type: 'string',\n      format: 'fee'\n    },\n    type: {\n      type: 'integer',\n      minimum: 0\n    },\n    timestamp: {\n      type: 'integer',\n      minimum: -2147483648,\n      maximum: 2147483647\n    },\n    senderId: {\n      type: 'string',\n      format: 'address'\n    },\n    senderPublicKey: {\n      type: 'string',\n      format: 'publicKey'\n    },\n    senderSecondPublicKey: {\n      type: 'string',\n      format: 'publicKey'\n    },\n    recipientId: {\n      type: 'string'\n    },\n    recipientPublicKey: {\n      type: 'string',\n      format: 'emptyOrPublicKey'\n    },\n    signature: {\n      type: 'string',\n      format: 'signature'\n    },\n    signSignature: {\n      type: 'string',\n      format: 'signature'\n    },\n    signatures: {\n      type: 'array',\n      uniqueItems: true,\n      items: {\n        type: 'string',\n        format: 'signature'\n      },\n      minItems: 0,\n      maxItems: 15\n    },\n    asset: {\n      type: 'object'\n    },\n    receivedAt: {\n      type: 'string',\n      format: 'date-time'\n    }\n  }\n};\nexports.transferTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        recipientId: {\n          format: 'address'\n        },\n        amount: {\n          format: 'transferAmount'\n        },\n        asset: {\n          type: 'object',\n          properties: {\n            data: {\n              type: 'string',\n              format: 'transferData',\n              maxLength: 64\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexports.signatureTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        amount: {\n          format: 'nonTransferAmount'\n        },\n        asset: {\n          type: 'object',\n          required: ['signature'],\n          properties: {\n            signature: {\n              type: 'object',\n              required: ['publicKey'],\n              properties: {\n                publicKey: {\n                  type: 'string',\n                  format: 'publicKey'\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexports.delegateTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        amount: {\n          format: 'nonTransferAmount'\n        },\n        asset: {\n          type: 'object',\n          required: ['delegate'],\n          properties: {\n            delegate: {\n              type: 'object',\n              required: ['username'],\n              properties: {\n                username: {\n                  type: 'string',\n                  maxLength: 20\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexports.voteTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        amount: {\n          format: 'nonTransferAmount'\n        },\n        asset: {\n          type: 'object',\n          required: ['votes'],\n          properties: {\n            votes: {\n              type: 'array',\n              uniqueSignedPublicKeys: true,\n              minItems: 1,\n              maxItems: 33,\n              items: {\n                type: 'string',\n                format: 'signedPublicKey'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexports.multiTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        amount: {\n          format: 'nonTransferAmount'\n        },\n        asset: {\n          type: 'object',\n          required: ['multisignature'],\n          properties: {\n            multisignature: {\n              type: 'object',\n              required: ['min', 'lifetime', 'keysgroup'],\n              properties: {\n                min: {\n                  type: 'integer',\n                  minimum: 1,\n                  maximum: 15\n                },\n                lifetime: {\n                  type: 'integer',\n                  minimum: 1,\n                  maximum: 72\n                },\n                keysgroup: {\n                  type: 'array',\n                  uniqueItems: true,\n                  minItems: 1,\n                  maxItems: 15,\n                  items: {\n                    type: 'string',\n                    format: 'additionPublicKey'\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexports.dappTransaction = {\n  $merge: {\n    source: {\n      $ref: 'lisk/base-transaction'\n    },\n    with: {\n      properties: {\n        amount: {\n          format: 'nonTransferAmount'\n        },\n        asset: {\n          type: 'object',\n          required: ['dapp'],\n          properties: {\n            dapp: {\n              type: 'object',\n              required: ['name', 'type', 'category', 'link'],\n              properties: {\n                icon: {\n                  type: 'string'\n                },\n                category: {\n                  type: 'integer'\n                },\n                type: {\n                  type: 'integer'\n                },\n                link: {\n                  type: 'string'\n                },\n                tags: {\n                  type: 'string'\n                },\n                description: {\n                  type: 'string'\n                },\n                name: {\n                  type: 'string'\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["../../../src/utils/validation/schema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.transaction = {\r\n    $id: 'lisk/transaction',\r\n    type: 'object',\r\n    required: ['type', 'amount', 'fee', 'senderPublicKey', 'timestamp'],\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n        },\r\n        blockId: {\r\n            type: 'string',\r\n        },\r\n        amount: {\r\n            type: ['string', 'integer'],\r\n        },\r\n        fee: {\r\n            type: ['string', 'integer'],\r\n        },\r\n        type: {\r\n            type: 'integer',\r\n        },\r\n        timestamp: {\r\n            type: 'integer',\r\n        },\r\n        senderId: {\r\n            type: 'string',\r\n        },\r\n        senderPublicKey: {\r\n            type: 'string',\r\n        },\r\n        recipientId: {\r\n            type: ['string', 'null'],\r\n        },\r\n        recipientPublicKey: {\r\n            type: ['string', 'null'],\r\n        },\r\n        signature: {\r\n            type: 'string',\r\n        },\r\n        signSignature: {\r\n            type: 'string',\r\n        },\r\n        signatures: {\r\n            type: 'array',\r\n        },\r\n        asset: {\r\n            type: 'object',\r\n        },\r\n        receivedAt: {\r\n            type: 'string',\r\n        },\r\n    },\r\n};\r\nexports.transactionInterface = {\r\n    required: [\r\n        'toJSON',\r\n        'isReady',\r\n        'getBytes',\r\n        'validate',\r\n        'verifyAgainstOtherTransactions',\r\n        'apply',\r\n        'undo',\r\n        'prepare',\r\n        'addMultisignature',\r\n        'addVerifiedMultisignature',\r\n        'isExpired',\r\n        'fromSync',\r\n    ],\r\n    properties: {\r\n        toJSON: {\r\n            typeof: 'function',\r\n        },\r\n        isReady: {\r\n            typeof: 'function',\r\n        },\r\n        getBytes: {\r\n            typeof: 'function',\r\n        },\r\n        validate: {\r\n            typeof: 'function',\r\n        },\r\n        verifyAgainstOtherTransactions: {\r\n            typeof: 'function',\r\n        },\r\n        apply: {\r\n            typeof: 'function',\r\n        },\r\n        undo: {\r\n            typeof: 'function',\r\n        },\r\n        prepare: {\r\n            typeof: 'function',\r\n        },\r\n        addMultisignature: {\r\n            typeof: 'function',\r\n        },\r\n        addVerifiedMultisignature: {\r\n            typeof: 'function',\r\n        },\r\n        processMultisignatures: {\r\n            typeof: 'function',\r\n        },\r\n        isExpired: {\r\n            typeof: 'function',\r\n        },\r\n        fromSync: {\r\n            typeof: 'function',\r\n        },\r\n    },\r\n};\r\nexports.baseTransaction = {\r\n    $id: 'lisk/base-transaction',\r\n    type: 'object',\r\n    required: [\r\n        'id',\r\n        'type',\r\n        'amount',\r\n        'fee',\r\n        'senderPublicKey',\r\n        'timestamp',\r\n        'asset',\r\n        'signature',\r\n    ],\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            format: 'id',\r\n        },\r\n        blockId: {\r\n            type: 'string',\r\n            format: 'id',\r\n        },\r\n        height: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n        },\r\n        confirmations: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n        },\r\n        amount: {\r\n            type: 'string',\r\n            format: 'amount',\r\n        },\r\n        fee: {\r\n            type: 'string',\r\n            format: 'fee',\r\n        },\r\n        type: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n        },\r\n        timestamp: {\r\n            type: 'integer',\r\n            minimum: -2147483648,\r\n            maximum: 2147483647,\r\n        },\r\n        senderId: {\r\n            type: 'string',\r\n            format: 'address',\r\n        },\r\n        senderPublicKey: {\r\n            type: 'string',\r\n            format: 'publicKey',\r\n        },\r\n        senderSecondPublicKey: {\r\n            type: 'string',\r\n            format: 'publicKey',\r\n        },\r\n        recipientId: {\r\n            type: 'string',\r\n        },\r\n        recipientPublicKey: {\r\n            type: 'string',\r\n            format: 'emptyOrPublicKey',\r\n        },\r\n        signature: {\r\n            type: 'string',\r\n            format: 'signature',\r\n        },\r\n        signSignature: {\r\n            type: 'string',\r\n            format: 'signature',\r\n        },\r\n        signatures: {\r\n            type: 'array',\r\n            uniqueItems: true,\r\n            items: {\r\n                type: 'string',\r\n                format: 'signature',\r\n            },\r\n            minItems: 0,\r\n            maxItems: 15,\r\n        },\r\n        asset: {\r\n            type: 'object',\r\n        },\r\n        receivedAt: {\r\n            type: 'string',\r\n            format: 'date-time',\r\n        },\r\n    },\r\n};\r\nexports.transferTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                recipientId: {\r\n                    format: 'address',\r\n                },\r\n                amount: {\r\n                    format: 'transferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        data: {\r\n                            type: 'string',\r\n                            format: 'transferData',\r\n                            maxLength: 64,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nexports.signatureTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                amount: {\r\n                    format: 'nonTransferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    required: ['signature'],\r\n                    properties: {\r\n                        signature: {\r\n                            type: 'object',\r\n                            required: ['publicKey'],\r\n                            properties: {\r\n                                publicKey: {\r\n                                    type: 'string',\r\n                                    format: 'publicKey',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nexports.delegateTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                amount: {\r\n                    format: 'nonTransferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    required: ['delegate'],\r\n                    properties: {\r\n                        delegate: {\r\n                            type: 'object',\r\n                            required: ['username'],\r\n                            properties: {\r\n                                username: {\r\n                                    type: 'string',\r\n                                    maxLength: 20,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nexports.voteTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                amount: {\r\n                    format: 'nonTransferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    required: ['votes'],\r\n                    properties: {\r\n                        votes: {\r\n                            type: 'array',\r\n                            uniqueSignedPublicKeys: true,\r\n                            minItems: 1,\r\n                            maxItems: 33,\r\n                            items: {\r\n                                type: 'string',\r\n                                format: 'signedPublicKey',\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nexports.multiTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                amount: {\r\n                    format: 'nonTransferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    required: ['multisignature'],\r\n                    properties: {\r\n                        multisignature: {\r\n                            type: 'object',\r\n                            required: ['min', 'lifetime', 'keysgroup'],\r\n                            properties: {\r\n                                min: {\r\n                                    type: 'integer',\r\n                                    minimum: 1,\r\n                                    maximum: 15,\r\n                                },\r\n                                lifetime: {\r\n                                    type: 'integer',\r\n                                    minimum: 1,\r\n                                    maximum: 72,\r\n                                },\r\n                                keysgroup: {\r\n                                    type: 'array',\r\n                                    uniqueItems: true,\r\n                                    minItems: 1,\r\n                                    maxItems: 15,\r\n                                    items: {\r\n                                        type: 'string',\r\n                                        format: 'additionPublicKey',\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\nexports.dappTransaction = {\r\n    $merge: {\r\n        source: { $ref: 'lisk/base-transaction' },\r\n        with: {\r\n            properties: {\r\n                amount: {\r\n                    format: 'nonTransferAmount',\r\n                },\r\n                asset: {\r\n                    type: 'object',\r\n                    required: ['dapp'],\r\n                    properties: {\r\n                        dapp: {\r\n                            type: 'object',\r\n                            required: ['name', 'type', 'category', 'link'],\r\n                            properties: {\r\n                                icon: {\r\n                                    type: 'string',\r\n                                },\r\n                                category: {\r\n                                    type: 'integer',\r\n                                },\r\n                                type: {\r\n                                    type: 'integer',\r\n                                },\r\n                                link: {\r\n                                    type: 'string',\r\n                                },\r\n                                tags: {\r\n                                    type: 'string',\r\n                                },\r\n                                description: {\r\n                                    type: 'string',\r\n                                },\r\n                                name: {\r\n                                    type: 'string',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n//# sourceMappingURL=schema.js.map"]},"metadata":{},"sourceType":"script"}