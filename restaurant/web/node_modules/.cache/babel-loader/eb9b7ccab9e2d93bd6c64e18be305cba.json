{"ast":null,"code":"var _jsxFileName = \"C:\\\\PoC\\\\restaurant_sidechain\\\\web\\\\src\\\\components\\\\FormSearch.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css';\nimport api from '../services/api';\n\nconst cryptography = require('@liskhq/lisk-cryptography');\n\nfunction FormSearch({\n  onSubmit\n}) {\n  const [transactionId, setTransaction] = useState('');\n  const [passphrase, setPassphrase] = useState('');\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const address = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).address;\n    const publicKey = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).publicKey;\n    var foodRequest = await api.post('/transaction', {\n      transactionId,\n      address\n    });\n    var clientData = \"\";\n    var result = \"\";\n\n    try {\n      alert(foodRequest.data.response.data.length);\n      alert(foodRequest.data.response.data[0].asset.clientNonce);\n      alert(foodRequest.data.response.data[0].asset.clientData);\n      alert(publicKey);\n\n      if (foodRequest.data.response.data.length > 0 && foodRequest.data.response.data[0].asset.clientNonce !== undefined) {\n        clientData = cryptography.decryptMessageWithPassphrase(foodRequest.data.response.data[0].asset.clientData, foodRequest.data.response.data[0].asset.clientNonce, passphrase, publicKey);\n      }\n\n      alert(clientData);\n      result = {\n        foodRequest: foodRequest,\n        deliveryAddress: clientData !== \"\" ? clientData.split(' ***Field*** ')[2] : foodRequest.data.response.data[0].asset.deliveryaddress,\n        user: clientData !== \"\" ? clientData.split(' ***Field*** ')[0] : foodRequest.data.response.data[0].asset.username,\n        observation: clientData !== \"\" ? clientData.split(' ***Field*** ')[3] : \"\"\n      };\n    } catch (e) {\n      alert(\"Something wrong with this search data\");\n      result = {\n        foodRequest: foodRequest,\n        deliveryAddress: \"***\",\n        user: \"***\",\n        observation: \"***\"\n      };\n    }\n\n    await onSubmit({\n      result\n    });\n    setTransaction('');\n    setPassphrase('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    id: \"request_type\",\n    name: \"request_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Transaction id\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"transactionId\",\n    name: \"transactionId\",\n    required: true,\n    onChange: e => setTransaction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Passphrase\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"passphrase\",\n    name: \"passphrase\",\n    onChange: e => setPassphrase(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Retrieve information of transaction requested\")))));\n}\n\nexport default FormSearch;","map":{"version":3,"sources":["C:/PoC/restaurant_sidechain/web/src/components/FormSearch.js"],"names":["React","useState","useEffect","api","cryptography","require","FormSearch","onSubmit","transactionId","setTransaction","passphrase","setPassphrase","handleSubmit","e","preventDefault","address","getAddressAndPublicKeyFromPassphrase","publicKey","foodRequest","post","clientData","result","alert","data","response","length","asset","clientNonce","undefined","decryptMessageWithPassphrase","deliveryAddress","split","deliveryaddress","user","username","observation","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles.css';\r\nimport api from '../services/api';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\n\r\nfunction FormSearch({onSubmit}){    \r\n    const [transactionId, setTransaction] = useState('');    \r\n    const [passphrase, setPassphrase] = useState('');\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n                \r\n        const address = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).address;\r\n        const publicKey = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).publicKey;\r\n\r\n        var foodRequest = await api.post('/transaction', {\r\n            transactionId,            \r\n            address\r\n        });                          \r\n\r\n        var clientData = \"\";\r\n        var result = \"\";         \r\n        \r\n        try{\r\n            alert(foodRequest.data.response.data.length);\r\n            alert(foodRequest.data.response.data[0].asset.clientNonce);\r\n            alert(foodRequest.data.response.data[0].asset.clientData);\r\n            alert(publicKey);\r\n\r\n            if (foodRequest.data.response.data.length > 0 && foodRequest.data.response.data[0].asset.clientNonce !== undefined){\r\n                clientData =  cryptography.decryptMessageWithPassphrase(foodRequest.data.response.data[0].asset.clientData, foodRequest.data.response.data[0].asset.clientNonce, passphrase, publicKey);\r\n            }\r\n            \r\n            alert(clientData);\r\n\r\n            \r\n            result = {  foodRequest: foodRequest,                \r\n                deliveryAddress: clientData !== \"\" ? clientData.split(' ***Field*** ')[2] : foodRequest.data.response.data[0].asset.deliveryaddress,\r\n                user: clientData !== \"\" ? clientData.split(' ***Field*** ')[0] : foodRequest.data.response.data[0].asset.username,\r\n                observation: clientData !== \"\" ? clientData.split(' ***Field*** ')[3] : \"\"\r\n            };\r\n        }catch (e){\r\n            alert(\"Something wrong with this search data\");\r\n            result = {  foodRequest: foodRequest,                \r\n                deliveryAddress: \"***\",\r\n                user: \"***\",\r\n                observation: \"***\"\r\n            };\r\n        }             \r\n\r\n        await onSubmit({\r\n            result\r\n        });\r\n        \r\n        setTransaction('');        \r\n        setPassphrase('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"hidden\" id=\"request_type\" name=\"request_type\"></input>                \r\n                    <div>\r\n                        <label>Transaction id</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"transactionId\" name=\"transactionId\" required onChange={e=> setTransaction(e.target.value)}/>\r\n                    </div>                        \r\n                    <div>\r\n                        <label>Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"passphrase\" name=\"passphrase\" onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>               \r\n                    <div>\r\n                        <button type=\"submit\">Retrieve information of transaction requested</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormSearch;"]},"metadata":{},"sourceType":"module"}