{"ast":null,"code":"'use strict';\n\nvar url = require('url');\n\nmodule.exports = function (ajv, keyword, jsonPatch, patchSchema) {\n  ajv.addKeyword(keyword, {\n    macro: function (schema, parentSchema, it) {\n      var source = schema.source;\n      var patch = schema.with;\n      if (source.$ref) source = JSON.parse(JSON.stringify(getSchema(source.$ref)));\n      if (patch.$ref) patch = getSchema(patch.$ref);\n      jsonPatch.call(null, source, patch, true);\n      return source;\n\n      function getSchema($ref) {\n        var id = it.baseId && it.baseId != '#' ? url.resolve(it.baseId, $ref) : $ref;\n        var validate = ajv.getSchema(id);\n        if (validate) return validate.schema;\n        throw new ajv.constructor.MissingRefError(it.baseId, $ref);\n      }\n    },\n    metaSchema: {\n      \"type\": \"object\",\n      \"required\": [\"source\", \"with\"],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"source\": {\n          \"anyOf\": [{\n            \"type\": \"object\",\n            \"required\": [\"$ref\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"$ref\": {\n                \"type\": \"string\",\n                \"format\": \"uri\"\n              }\n            }\n          }, {\n            \"$ref\": \"http://json-schema.org/draft-07/schema#\"\n          }]\n        },\n        \"with\": patchSchema\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/davin.DESKTOP-83VQBDE/Documents/restaurant_sidechain/web/node_modules/ajv-merge-patch/keywords/add_keyword.js"],"names":["url","require","module","exports","ajv","keyword","jsonPatch","patchSchema","addKeyword","macro","schema","parentSchema","it","source","patch","with","$ref","JSON","parse","stringify","getSchema","call","id","baseId","resolve","validate","constructor","MissingRefError","metaSchema"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,OAAf,EAAwBC,SAAxB,EAAmCC,WAAnC,EAAgD;AAC/DH,EAAAA,GAAG,CAACI,UAAJ,CAAeH,OAAf,EAAwB;AACtBI,IAAAA,KAAK,EAAE,UAAUC,MAAV,EAAkBC,YAAlB,EAAgCC,EAAhC,EAAoC;AACzC,UAAIC,MAAM,GAAGH,MAAM,CAACG,MAApB;AACA,UAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAnB;AACA,UAAIF,MAAM,CAACG,IAAX,EAAiBH,MAAM,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeC,SAAS,CAACP,MAAM,CAACG,IAAR,CAAxB,CAAX,CAAT;AACjB,UAAIF,KAAK,CAACE,IAAV,EAAgBF,KAAK,GAAGM,SAAS,CAACN,KAAK,CAACE,IAAP,CAAjB;AAChBV,MAAAA,SAAS,CAACe,IAAV,CAAe,IAAf,EAAqBR,MAArB,EAA6BC,KAA7B,EAAoC,IAApC;AACA,aAAOD,MAAP;;AAEA,eAASO,SAAT,CAAmBJ,IAAnB,EAAyB;AACvB,YAAIM,EAAE,GAAGV,EAAE,CAACW,MAAH,IAAaX,EAAE,CAACW,MAAH,IAAa,GAA1B,GACGvB,GAAG,CAACwB,OAAJ,CAAYZ,EAAE,CAACW,MAAf,EAAuBP,IAAvB,CADH,GAEGA,IAFZ;AAGA,YAAIS,QAAQ,GAAGrB,GAAG,CAACgB,SAAJ,CAAcE,EAAd,CAAf;AACA,YAAIG,QAAJ,EAAc,OAAOA,QAAQ,CAACf,MAAhB;AACd,cAAM,IAAIN,GAAG,CAACsB,WAAJ,CAAgBC,eAApB,CAAoCf,EAAE,CAACW,MAAvC,EAA+CP,IAA/C,CAAN;AACD;AACF,KAjBqB;AAkBtBY,IAAAA,UAAU,EAAE;AACV,cAAQ,QADE;AAEV,kBAAY,CAAE,QAAF,EAAY,MAAZ,CAFF;AAGV,8BAAwB,KAHd;AAIV,oBAAc;AACZ,kBAAU;AACR,mBAAS,CACP;AACE,oBAAQ,QADV;AAEE,wBAAY,CAAE,MAAF,CAFd;AAGE,oCAAwB,KAH1B;AAIE,0BAAc;AACZ,sBAAQ;AACN,wBAAQ,QADF;AAEN,0BAAU;AAFJ;AADI;AAJhB,WADO,EAYP;AAAE,oBAAQ;AAAV,WAZO;AADD,SADE;AAiBZ,gBAAQrB;AAjBI;AAJJ;AAlBU,GAAxB;AA2CD,CA5CD","sourcesContent":["'use strict';\n\nvar url = require('url');\n\nmodule.exports = function (ajv, keyword, jsonPatch, patchSchema) {\n  ajv.addKeyword(keyword, {\n    macro: function (schema, parentSchema, it) {\n      var source = schema.source;\n      var patch = schema.with;\n      if (source.$ref) source = JSON.parse(JSON.stringify(getSchema(source.$ref)));\n      if (patch.$ref) patch = getSchema(patch.$ref);\n      jsonPatch.call(null, source, patch, true);\n      return source;\n\n      function getSchema($ref) {\n        var id = it.baseId && it.baseId != '#'\n                  ? url.resolve(it.baseId, $ref)\n                  : $ref;\n        var validate = ajv.getSchema(id);\n        if (validate) return validate.schema;\n        throw new ajv.constructor.MissingRefError(it.baseId, $ref);\n      }\n    },\n    metaSchema: {\n      \"type\": \"object\",\n      \"required\": [ \"source\", \"with\" ],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"source\": {\n          \"anyOf\": [\n            {\n              \"type\": \"object\",\n              \"required\": [ \"$ref\" ],\n              \"additionalProperties\": false,\n              \"properties\": {\n                \"$ref\": {\n                  \"type\": \"string\",\n                  \"format\": \"uri\"\n                }\n              }\n            },\n            { \"$ref\": \"http://json-schema.org/draft-07/schema#\" }\n          ]\n        },\n        \"with\": patchSchema\n      }\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}