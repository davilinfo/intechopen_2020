{"version":3,"sources":["services/api.js","components/FoodItem.js","components/FormOrderQrCode.js","components/FoodOrderQrCode.js","components/FoodItemDetail.js","App.js","components/History.js","components/Menu.js","components/FormPayment.js","components/FoodOrderPayment.js","components/FormOrder.js","components/FoodOrder.js","components/FormRefund.js","components/FoodRefund.js","components/FormReservation.js","components/FoodReservation.js","components/Header.js","components/Footer.js","components/Contact.js","index.js"],"names":["api","axios","create","baseURL","FoodItem","props","food","FormOrderQrCode","onSubmit","useState","username","setUsername","phone","setPhone","deliveryaddress","setDeliveryAddress","observation","setObservation","e","a","preventDefault","id","align","type","name","required","onChange","target","value","rows","FoodOrderQrCode","foodType","document","location","pathname","split","setFood","order","setOrder","orderstring","setOrderString","data","request_type","post","encodeURI","concat","response","undefined","transaction_result","className","src","img","width","height","alt","description","amount","status","href","querystring","ReactDOM","render","getElementById","useEffect","console","log","get","loadFood","style","FoodItemDetail","exact","to","path","key","component","App","foods","setFoods","result","loadFoods","filter","entrances","category","map","menu","History","Menu","marginLeft","cryptography","require","FoodRequest","FormPayment","passphrase","setPassphrase","decodeURI","text","clientData","encryptMessageWithPassphrase","getPrivateAndPublicKeyFromPassphrase","publicKey","txFood","asset","encryptedMessage","clientNonce","nonce","toString","recipientId","timestamp","parseInt","sign","FoodOrderPayment","transaction","networkid","senderId","broadcastInfo","message","FormOrder","encryptedPassphrase","encryptPassphraseWithPassword","transactions","FoodOrder","userid","utils","convertBeddowsToLSK","FormRefund","setAmount","recipientAddress","setRecipientAddress","password","setPassword","transactionId","setTransaction","FoodRefund","FormReservation","address","getAddressAndPublicKeyFromPassphrase","foodRequest","length","decryptMessageWithPassphrase","deliveryAddress","user","alert","FoodReservation","setFoodRequest","Header","activeClassName","Footer","Contact","routing"],"mappings":"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","file":"static/js/main.fb9f012f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL : 'http://www.liskrestaurant.com:3334'\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nfunction FoodItem(props){\r\n    const { food } = props;\r\n\r\n    return (\r\n        <li> {food.food} </li>       \r\n    );\r\n}\r\n\r\nexport default FoodItem;","import React, { useState } from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nfunction FormOrderQrCode({onSubmit}){\r\n    const [username, setUsername] = useState('');    \r\n    const [phone, setPhone] = useState('');\r\n    const [deliveryaddress, setDeliveryAddress] = useState(''); \r\n    const [observation, setObservation] = useState('');   \r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        await onSubmit({\r\n            username,\r\n            phone,\r\n            deliveryaddress,\r\n            observation\r\n        });\r\n\r\n        setUsername('');\r\n        setPhone('');\r\n        setDeliveryAddress('');   \r\n        setObservation('');     \r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"hidden\" id=\"request_type\" name=\"request_type\"></input>\r\n                    <div>\r\n                        <label>Your Name</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"username\" name=\"username\" required onChange={e=> setUsername(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Your phone</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"phone\" name=\"phone\" required onChange={e=> setPhone(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Delivery address</label>\r\n                    </div>\r\n                    <div>\r\n                        <textarea rows=\"5\" id=\"deliveryaddress\" name=\"deliveryaddress\" required onChange={e=> setDeliveryAddress(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Any observation</label>\r\n                    </div>\r\n                    <div>\r\n                        <textarea rows=\"5\" id=\"observation\" name=\"observation\" onChange={e=> setObservation(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Place your order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormOrderQrCode;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactQrCode from 'qrcode-react';\r\nimport api from '../services/api';\r\nimport FormOrderQrCode from './FormOrderQrCode';\r\n//import FoodOrderPayment from './FoodOrderPayment';\r\nimport '../styles.css';\r\n\r\nfunction FoodOrderQrCode(props){        \r\n    var foodType = document.location.pathname.split(\"/\")[2];    \r\n\r\n    var [food, setFood] = useState([]);\r\n    var [order, setOrder] = useState([]);\r\n    var [orderstring, setOrderString] = useState('');    \r\n\r\n    useEffect (() => {\r\n      async function loadFood(){\r\n        console.log(\"loading food\");                    \r\n        const response = await api.get('/foodDetail/'.concat(foodType));\r\n        food = response.data.response;\r\n        setFood(food);        \r\n      }\r\n             \r\n      loadFood();\r\n    }, []);             \r\n\r\n    async function handleSubmit(data){\r\n        \r\n        data.request_type = foodType;\r\n\r\n        order = await api.post('/storeQrCode', data);           \r\n        setOrder(order);             \r\n\r\n        orderstring = encodeURI(\"recipient=\".concat(order.data.response.split(\"&\")[0].split(\"=\")[1])\r\n        .concat(\"&amount=\").concat(order.data.response.split(\"&\")[1].split(\"=\")[1])\r\n        .concat(\"&food=\").concat(order.data.response.split(\"&\")[2].split(\"=\")[1])\r\n        .concat(\"&foodtype=\").concat(order.data.response.split(\"&\")[3].split(\"=\")[1])\r\n        .concat(\"&timestamp=\").concat(order.data.response.split(\"&\")[4].split(\"=\")[1])\r\n        .concat(\"&username=\").concat(order.data.response.split(\"&\")[5].split(\"=\")[1])\r\n        .concat(\"&phone=\").concat(order.data.response.split(\"&\")[6].split(\"=\")[1])\r\n        .concat(\"&deliveryaddress=\").concat(order.data.response.split(\"&\")[7].split(\"=\")[1])\r\n        .concat(\"&observation=\").concat(\r\n            order.data.response.split(\"&\")[8] !== undefined ?\r\n            order.data.response.split(\"&\")[8].split(\"=\")[1]:\r\n            \"\"));\r\n        \r\n        setOrderString(orderstring);   \r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">    \r\n                <img src={`../${food.img}`} width=\"200\" height=\"200\" alt=\"\" /> \r\n                <br />\r\n                <p>\r\n                Food description: {food.description} \r\n                </p>\r\n                <p>\r\n                Amount: {food.amount}\r\n                </p>\r\n                <br/>\r\n                {order.data.status}                    \r\n                <br/>\r\n                <label>Point the camera of your phone to the qr code. Once loaded proceed with the payment</label>                \r\n                <br/>                \r\n                <div id=\"divqrcode\">\r\n                    <div id=\"divqrcode\">\r\n                        <ReactQrCode value={order.data.response}/>\r\n                    </div>              \r\n                </div>                     \r\n                \r\n                <br/>\r\n                <a href={`/FoodOrderPayment?${orderstring}`} querystring={`${orderstring}`}>Or proceed with direct payment here</a>                \r\n                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">\r\n                <img src={`../${food.img}`} width=\"200\" height=\"200\" alt=\"\" />\r\n                <div className=\"recipes_topic\">                                         \r\n                    {food.food}                    \r\n                    <br />\r\n                    <p style={{width: 300}}>\r\n                    Food description: {food.description}                    \r\n                    </p>                                \r\n                    Amount: {food.amount}        \r\n                    <br/>\r\n                    <div className=\"clear\"></div>                    \r\n                </div>\r\n                <br/>\r\n                <FormOrderQrCode onSubmit={handleSubmit}></FormOrderQrCode>\r\n                    \r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrderQrCode;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport FoodOrderQrCode from './FoodOrderQrCode';\r\n\r\nimport '../styles.css';\r\n\r\nfunction FoodItemDetail(props){\r\n    const { food } = props;\r\n\r\n    return (        \r\n        <>            \r\n            <Link exact to={`/FoodOrderQrCode/${food.type}`}>\r\n                <div className=\"recipes_topic\"> \r\n                    <img src={food.img} width=\"72\" height=\"72\" alt=\"\" />\r\n                    <br></br>\r\n                    <span className=\"headline\">{food.food}</span> <br />\r\n                    {food.description}\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            </Link>\r\n            <Route path={`/FoodOrderQrCode/${food.type}`} key={food.type} component={FoodOrderQrCode}></Route>\r\n       </>                         \r\n    );\r\n}\r\n\r\n\r\nexport default FoodItemDetail;","import React, { useState, useEffect } from 'react';\r\nimport api from './services/api';\r\nimport FoodItem from './components/FoodItem';\r\nimport FoodItemDetail from './components/FoodItemDetail';\r\nimport './styles.css';\r\n\r\n//Componente: Bloco isolado de HTML, CSS e JS o qual não interfere no resto da aplicação. Nesse código está representado por uma função que renderiza algum HTML. (Regra de apenas 1 por arquivo)\r\n//Propriedade: Informações que um componente PAI passa para o componente Filho. Ao utilizar propriedade função da propriedade utiliza (props) para passar propriedade\r\n//Estado: Informações mantidas pelo componente (Lembrar: imutabilidade). Utilizar useState [variavel, funcaoParaAtualizarVariavel]\r\n\r\nfunction App() {    \r\n    var [foods, setFoods] = useState([]);      \r\n    useEffect (() => {\r\n      async function loadFoods(){\r\n        console.log(\"loading foods\");        \r\n        const response = await api.get('/list');        \r\n        foods = response.data.result;\r\n        setFoods(foods);\r\n      }      \r\n      \r\n      loadFoods();             \r\n    }, []);                 \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\">\r\n                <div id=\"leftPan\">\r\n                <div id=\"welcome\">\r\n                    <h2></h2>\r\n                    <img src=\"images/img_welcome.jpg\" width=\"72\" height=\"72\" alt=\"\" />\r\n                    <p><span className=\"headline\">Enjoy delicious food</span><br />\r\n                    Seafood, meat, barbecue, menu and delicious dessert created for you. Payment and transactions details managed by Lisk Restaurant sidechain </p>\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n                <div id=\"services\">\r\n                    <h2></h2>\r\n                    <p className=\"headline2\">You have the option to choose the following entrances.</p>\r\n                    <ul >\r\n                    {                       \r\n                        foods.filter(entrances=> entrances.category === 1 ).map(food => (\r\n                            <FoodItem key={food.type} food={food}></FoodItem>\r\n                        ))\r\n                    }              \r\n                    </ul>\r\n                    <div className=\"clear\"></div>\r\n                    <br></br>\r\n                    <p className=\"headline2\">You have the option to choose the following menu.</p>\r\n                    <ul >\r\n                    {                       \r\n                        foods.filter(menu=> menu.category === 2 ).map(food => (\r\n                            <>\r\n                            <FoodItem key={food.type} food={food}></FoodItem>\r\n                            <br/>\r\n                            </>                            \r\n                        ))\r\n                    }              \r\n                    </ul>\r\n                    <div className=\"clear\"></div>\r\n                    <br></br>\r\n                    <p className=\"headline2\">You have the option to choose the following desserts.</p>\r\n                    <ul >\r\n                    {                       \r\n                        foods.filter(entrances=> entrances.category === 3 ).map(food => (\r\n                            <FoodItem key={food.type} food={food}></FoodItem>\r\n                        ))\r\n                    }              \r\n                    </ul>\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            </div>\r\n            <div id=\"rightPan\">\r\n                <div id=\"recipes\">\r\n                    <h2></h2>                        \r\n                    {                     \r\n                        foods.map(food => (                             \r\n                            <FoodItemDetail key={food.type} food={food}></FoodItemDetail>\r\n                        ))                            \r\n                    }                                               \r\n                </div>\r\n            </div>\r\n            <div className=\"clear\" id=\"end\"></div>\r\n            </div>            \r\n        </div>\r\n        \r\n    );    \r\n        \r\n}\r\n        \r\nexport default App;","import React from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nfunction History(){    \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\">\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p className=\"headline2\" align=\"center\">Our History</p>                            \r\n                <div className=\"headline2\" align=\"center\"><p> Luxury restaurant was created as a Proof of Concept for Lisk sidechain blockchain.</p></div>                    \r\n                <div className=\"headline2\" align=\"center\"><p>The goal is to demonstrate how easy can be to create a restaurant based backend that consumes the restaurant sidechain.</p></div>                    \r\n                <div className=\"headline2\" align=\"center\"><p>\r\n                This site represents a sea food luxury restaurant. It's possible to list all the food offered by this restaurant in the home page.\r\n                </p></div>\r\n                <div className=\"headline2\" align=\"center\">\r\n                    Also, it is possible to click on a food preference and command a desired food option. \r\n                </div>\r\n                <div className=\"headline2\" align=\"center\">    \r\n                    Once commanded the food then a FoodTransaction will be created\r\n                    in the restaurant sidechain, \r\n                    <br/>\r\n                    the transaction value will be placed on the restaurant Lisk address and the value will be debited from\r\n                    the sender wallet.\r\n                </div>                    \r\n                <div className=\"clear\"></div>    \r\n                <br/>\r\n                <br/>\r\n                <br/>                           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport FoodItemDetail from './FoodItemDetail';\r\nimport '../styles.css';\r\n\r\n//Componente: Bloco isolado de HTML, CSS e JS o qual não interfere no resto da aplicação. Nesse código está representado por uma função que renderiza algum HTML. (Regra de apenas 1 por arquivo)\r\n//Propriedade: Informações que um componente PAI passa para o componente Filho. Ao utilizar propriedade função da propriedade utiliza (props) para passar propriedade\r\n//Estado: Informações mantidas pelo componente (Lembrar: imutabilidade). Utilizar useState [variavel, funcaoParaAtualizarVariavel]\r\n\r\nfunction Menu() {    \r\n    var [foods, setFoods] = useState([]);      \r\n    useEffect (() => {\r\n      async function loadFoods(){\r\n        console.log(\"loading foods\");        \r\n        const response = await api.get('/list');        \r\n        foods = response.data.result;\r\n        setFoods(foods);\r\n      }      \r\n      \r\n      loadFoods();             \r\n    }, []);                 \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\">\r\n                <br/>\r\n                <br/>                \r\n                    <div id=\"rightPan\">\r\n                        <ul style={{marginLeft: 280, width:300}}>\r\n                        {                       \r\n                            foods.filter(menu=> menu.category === 2 ).map(food => (\r\n                                <>\r\n                                    <FoodItemDetail key={food.type} food={food}></FoodItemDetail>\r\n                                    <br/>\r\n                                </>\r\n                            ))\r\n                        }              \r\n                        </ul>\r\n                    </div>           \r\n                    <div className=\"clear\" id=\"end\"></div>                \r\n                <br/>\r\n                <br/>\r\n            </div>            \r\n        </div>        \r\n    );    \r\n        \r\n}\r\n        \r\nexport default Menu;","import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport '../styles.css';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\nconst FoodRequest = require(\"liskrestaurant_transactions\");\r\n\r\nfunction FormPayment({onSubmit}, props){    \r\n    const [passphrase, setPassphrase] = useState('');    \r\n    \r\n    var orderstring = decodeURI(document.location.href.split(\"?\")[1]);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");                                      \r\n        }\r\n    \r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        var username = await api.post(\"/cryptography\", { text: orderstring[5].split('=')[1] });\r\n        var phone = await api.post(\"/cryptography\", { text: orderstring[6].split('=')[1] });\r\n        var deliveryaddress = await api.post(\"/cryptography\", { text: orderstring[7].split('=')[1] });\r\n        var observation = \"\";\r\n        if (orderstring[8] !== undefined){\r\n            observation = await api.post(\"/cryptography\", { text: orderstring[8].split('=')[1] });\r\n        }\r\n\r\n        var clientData = cryptography.encryptMessageWithPassphrase(\r\n            orderstring[5].split('=')[1].concat(' ***Field*** ')\r\n            .concat(orderstring[6].split('=')[1]).concat(' ***Field*** ')\r\n            .concat(orderstring[7].split('=')[1]).concat(' ***Field*** ')\r\n            .concat(orderstring[8].split('=')[1]),\r\n            passphrase,\r\n            cryptography.getPrivateAndPublicKeyFromPassphrase(passphrase).publicKey);                    \r\n\r\n        const txFood = new FoodRequest({\r\n            asset: {\r\n                name: orderstring[2].split('=')[1],\r\n                description: orderstring[2].split('=')[1],\r\n                username: username.data.response,\r\n                phone: phone.data.response,\r\n                deliveryaddress: deliveryaddress.data.response,\r\n                foodType: orderstring[3].split('=')[1],\r\n                observation: observation.data !== undefined ? observation.data.response : \"\",\r\n                clientData: clientData.encryptedMessage,\r\n                clientNonce: clientData.nonce\r\n            },\r\n            amount: orderstring[1].split('=')[1].toString(),\r\n            recipientId: orderstring[0].split('=')[1], //restaurant lisk address\r\n            timestamp: parseInt(orderstring[4].split('=')[1])\r\n        });\r\n\r\n        txFood.sign(passphrase);                \r\n\r\n        await onSubmit({         \r\n            txFood            \r\n        });\r\n        \r\n        setPassphrase('');        \r\n    }    \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>                                  \r\n                    <div>\r\n                        <label>Your Lisk Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"passphrase\" name=\"passphrase\" required onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble</label>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormPayment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormPayment from './FormPayment';\r\nimport '../styles.css';\r\n\r\nfunction FoodOrderPayment(props){        \r\n    var querystring = document.location.href.split(\"?\")[1];         \r\n\r\n    var [order, setOrder] = useState([]);                    \r\n    \r\n    /*this function should be uncommented if is desired to sign transaction at frontend*/\r\n    async function handleSubmit(data){                                                          \r\n               \r\n        order = await api.post('/payment', {transaction: data.txFood, networkid: 'identifier'});\r\n        console.log(order);\r\n        \r\n        setOrder(order);                  \r\n        \r\n        if (order.data.status === \"Transaction result\"){\r\n\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    {order.data.status}\r\n                    <br />\r\n                    Transaction id: {order.data.response.transaction.id}\r\n                    <br/>\r\n                    Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                    <br/>\r\n                    Payer LSK address: {order.data.response.transaction.senderId}\r\n                    <br/>\r\n                    Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                    <br/>\r\n                    Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n        }else{\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">                    \r\n                    Transaction result: {order.data.status}                                  \r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n            \r\n            ReactDOM.render(transaction_result, document.getElementById('content'));  \r\n        }\r\n    }       \r\n    \r\n    /*\r\n    async function handleSubmit(data){                              \r\n        var orderstring = decodeURI(querystring);\r\n        if (orderstring !== null && orderstring !== undefined){    \r\n            orderstring = orderstring.split(\"&\");\r\n                            \r\n            data.recipientAddress = orderstring[0].split('=')[1];\r\n            data.amount = orderstring[1].split('=')[1];\r\n            data.name = orderstring[2].split('=')[1];\r\n            data.request_type = orderstring[3].split('=')[1];\r\n            data.timestamp = orderstring[4].split('=')[1];\r\n            data.username = orderstring[5].split('=')[1];\r\n            data.phone = orderstring[6].split('=')[1];\r\n            data.deliveryaddress = orderstring[7].split('=')[1];\r\n            data.table = 1;\r\n            data.user = 1;            \r\n        }                        \r\n\r\n        order = await api.post('/userRequest', data);\r\n        setOrder(order);                  \r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                {order.data.status}\r\n                <br />\r\n                Transaction id: {order.data.response.transaction.id}\r\n                <br/>\r\n                Paid Amount: LSK {order.data.response.transaction.amount/100000000}\r\n                <br/>\r\n                Payer LSK address: {order.data.response.transaction.senderId}\r\n                <br/>\r\n                Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                <br/>\r\n                Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }*/\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormPayment onSubmit={handleSubmit} orderstring={querystring}></FormPayment>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrderPayment;","import React, { useState, useEffect } from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\n\r\nfunction FormOrder({onSubmit}){\r\n    const [username, setUsername] = useState('');\r\n    const [passphrase, setPassphrase] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [deliveryaddress, setDeliveryAddress] = useState('');    \r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const encryptedPassphrase = cryptography.encryptPassphraseWithPassword(passphrase, 'luxuryRestaurant');\r\n\r\n        await onSubmit({\r\n            username,\r\n            phone,\r\n            deliveryaddress,\r\n            encryptedPassphrase\r\n        });\r\n\r\n        setUsername('');\r\n        setPhone('');\r\n        setDeliveryAddress('');\r\n        setPassphrase('');        \r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"hidden\" id=\"request_type\" name=\"request_type\"></input>\r\n                    <div>\r\n                        <label>Your Name</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"username\" name=\"username\" required onChange={e=> setUsername(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Your phone</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"phone\" name=\"phone\" required onChange={e=> setPhone(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Delivery address</label>\r\n                    </div>\r\n                    <div>\r\n                        <textarea rows=\"5\" id=\"deliveryaddress\" name=\"deliveryaddress\" required onChange={e=> setDeliveryAddress(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Your Lisk Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"passphrase\" name=\"passphrase\" required onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>copy this passphrase and test above if desired: wagon stock borrow episode laundry kitten salute link globe zero feed marble</label>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormOrder;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormOrder from './FormOrder';\r\nimport '../styles.css';\r\nconst transactions = require(\"@liskhq/lisk-transactions\");\r\n\r\nfunction FoodOrder(props){        \r\n    var foodType = document.location.pathname.split(\"/\")[2];    \r\n\r\n    var [food, setFood] = useState([]);\r\n    var [order, setOrder] = useState([]);        \r\n\r\n    useEffect (() => {\r\n      async function loadFood(){\r\n        console.log(\"loading food\");                    \r\n        const response = await api.get('/foodDetail/'.concat(foodType));\r\n        food = response.data.response;\r\n        setFood(food);        \r\n      }\r\n        \r\n      loadFood();             \r\n    }, []);    \r\n\r\n    async function handleSubmit(data){\r\n        \r\n        data.request_type = foodType;\r\n        data.userid = 1;                \r\n\r\n        order = await api.post('/userRequest', data);   \r\n        setOrder(order);     \r\n        \r\n        if (order.data.status === \"Transaction result\"){\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">    \r\n                    <img src={`../${food.img}`} width=\"200\" height=\"200\" alt=\"\" /> \r\n                    <br />\r\n                    <p>\r\n                    Food description:  {food.description} \r\n                    </p>\r\n                    <p>\r\n                    {order.data.status}                    \r\n                    <br/>\r\n                    Transaction id: {order.data.response.transaction.id}\r\n                    <br/>\r\n                    Paid Amount: LSK {transactions.utils.convertBeddowsToLSK(order.data.response.transaction.amount)}\r\n                    <br/>\r\n                    Payer address: {order.data.response.transaction.senderId}\r\n                    <br/>\r\n                    Restaurant address: {order.data.response.transaction.recipientId}\r\n                    <br/>\r\n                    Broadcast info: {order.data.response.broadcastInfo.data.message}\r\n                    </p>\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n\r\n            ReactDOM.render(transaction_result, document.getElementById('content'));\r\n        }else{\r\n            const transaction_result = (\r\n                <div className=\"recipes_topic\">    \r\n                    <img src={`../${food.img}`} width=\"200\" height=\"200\" alt=\"\" /> \r\n                    <br />\r\n                    <p>\r\n                    Food description:  {food.description} \r\n                    </p>\r\n                    <p>\r\n                    {order.data.status}\r\n                    <br/>\r\n                    {order.data.response.transaction}\r\n                    <br/>\r\n                    Broadcast info: {order.data.response.broadcastInfo.data.message}\r\n                    </p>\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n            );\r\n\r\n            ReactDOM.render(transaction_result, document.getElementById('content'));\r\n        }\r\n    }        \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">\r\n                <img src={`../${food.img}`} width=\"200\" height=\"200\" alt=\"\" />\r\n                <div className=\"recipes_topic\">                     \r\n                    <p>\r\n                    {food.food}                    \r\n                    <br />\r\n                    <p style={{width: 300}}>\r\n                        Food description: {food.description}\r\n                    </p>\r\n                    <br/>\r\n                    Amount: {food.amount}\r\n                    </p>\r\n                    <div className=\"clear\"></div>\r\n                </div>\r\n                <FormOrder onSubmit={handleSubmit}></FormOrder>                \r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodOrder;","import React, { useState, useEffect } from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nfunction FormRefund({onSubmit}){\r\n    const [amount, setAmount] = useState('');\r\n    const [recipientAddress, setRecipientAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [transactionId, setTransaction] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n    });\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        await onSubmit({\r\n            transactionId,\r\n            amount,\r\n            recipientAddress,\r\n            password\r\n        });\r\n\r\n        setAmount('');\r\n        setRecipientAddress('');\r\n        setPassword('');\r\n        setTransaction('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"hidden\" id=\"request_type\" name=\"request_type\"></input>\r\n                    <div>\r\n                        <label>Transaction id</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"transactionId\" name=\"transactionId\" required onChange={e=> setTransaction(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>LSK Amount</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"amount\" name=\"amount\" required onChange={e=> setAmount(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>LSK Recipient address to be refunded</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"recipientAddress\" name=\"recipientAddress\" required onChange={e=> setRecipientAddress(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Password</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" required onChange={e=> setPassword(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Refund</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormRefund;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormRefund from './FormRefund';\r\nimport '../styles.css';\r\nconst transactions = require(\"@liskhq/lisk-transactions\");\r\n\r\nfunction FoodRefund(props){                   \r\n    var [order, setOrder] = useState([]);            \r\n\r\n    async function handleSubmit(data){                \r\n\r\n        order = await api.post('/refund', data);   \r\n        setOrder(order);    \r\n        \r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                Transaction result: {order.data.status}\r\n                <br />\r\n                Refund Transaction id: {order.data.response.transaction.id}\r\n                <br/>\r\n                Paid Amount: LSK {transactions.utils.convertBeddowsToLSK(order.data.response.transaction.amount)}\r\n                <br/>\r\n                Payer LSK address: {order.data.response.transaction.senderId}\r\n                <br/>\r\n                Restaurant LSK address: {order.data.response.transaction.recipientId}\r\n                <br/>\r\n                Broadcast info: {order.data.response.broadcastInfo.data.message}                \r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }        \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormRefund onSubmit={handleSubmit}></FormRefund>                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodRefund;","import React, { useState, useEffect } from 'react';\r\nimport '../styles.css';\r\nimport api from '../services/api';\r\n\r\nconst cryptography = require('@liskhq/lisk-cryptography');\r\n\r\nfunction FormReservation({onSubmit}){    \r\n    const [transactionId, setTransaction] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [passphrase, setPassphrase] = useState('');\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n                \r\n        const address = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).address;\r\n        const publicKey = cryptography.getAddressAndPublicKeyFromPassphrase(passphrase).publicKey;\r\n\r\n        var foodRequest = await api.post('/transaction', {\r\n            transactionId,\r\n            phone,\r\n            address\r\n        });                          \r\n\r\n        var clientData = \"\";\r\n        var result = \"\";         \r\n        \r\n        try{\r\n            clientData = foodRequest.data.response.data.length > 0 && foodRequest.data.response.data[0].asset.clientNonce !== undefined ? cryptography.decryptMessageWithPassphrase(foodRequest.data.response.data[0].asset.clientData, foodRequest.data.response.data[0].asset.clientNonce, passphrase, publicKey) : \"\";\r\n            result = {  foodRequest: foodRequest,\r\n                phone: clientData !== \"\" ? clientData.split(' ***Field*** ')[1] : foodRequest.data.response.data[0].asset.phone,\r\n                deliveryAddress: clientData !== \"\" ? clientData.split(' ***Field*** ')[2] : foodRequest.data.response.data[0].asset.deliveryaddress,\r\n                user: clientData !== \"\" ? clientData.split(' ***Field*** ')[0] : foodRequest.data.response.data[0].asset.username,\r\n                observation: clientData !== \"\" ? clientData.split(' ***Field*** ')[3] : \"\"\r\n            };\r\n        }catch (e){\r\n            alert(\"Something wrong with this search data\");\r\n            result = {  foodRequest: foodRequest,\r\n                phone: \"***\",\r\n                deliveryAddress: \"***\",\r\n                user: \"***\",\r\n                observation: \"***\"\r\n            };\r\n        }             \r\n\r\n        await onSubmit({\r\n            result\r\n        });\r\n        \r\n        setTransaction('');\r\n        setPhone('');\r\n        setPassphrase('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"hidden\" id=\"request_type\" name=\"request_type\"></input>                \r\n                    <div>\r\n                        <label>Transaction id</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"transactionId\" name=\"transactionId\" required onChange={e=> setTransaction(e.target.value)}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Phone number</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" id=\"phone\" name=\"phone\" onChange={e=> setPhone(e.target.value)}/>\r\n                    </div>     \r\n                    <div>\r\n                        <label>Passphrase</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"passphrase\" name=\"passphrase\" onChange={e=> setPassphrase(e.target.value)}/>\r\n                    </div>               \r\n                    <div>\r\n                        <button type=\"submit\">Retrieve information of transaction requested</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormReservation;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport api from '../services/api';\r\nimport FormReservation from './FormReservation';\r\nimport '../styles.css';\r\nconst transactions = require(\"@liskhq/lisk-transactions\");\r\n\r\nfunction FoodReservation(props){                   \r\n    var [foodRequest, setFoodRequest] = useState([]);     \r\n    var [phone, setPhone] = useState('');\r\n    var [deliveryAddress, setDeliveryAddress] = useState('');\r\n    var [username, setUsername] = useState('');\r\n    var [observation, setObservation] = useState('');\r\n\r\n    async function handleSubmit(data){                \r\n        \r\n        foodRequest = data.result.foodRequest;\r\n        phone = data.result.phone;\r\n        deliveryAddress = data.result.deliveryAddress;\r\n        username = data.result.user;\r\n        observation= data.result.observation;\r\n        \r\n        setFoodRequest(foodRequest);    \r\n        setPhone(phone);\r\n        setDeliveryAddress(deliveryAddress);\r\n        setObservation(observation);\r\n        setUsername(username);\r\n\r\n        const transaction_result = (\r\n            <div className=\"recipes_topic\">                    \r\n                {foodRequest.data.status}\r\n                <br />\r\n                Transaction id: {foodRequest.data.response.data.length > 0 ? foodRequest.data.response.data[0].id : \"\"}                \r\n                <br/>\r\n                Payer LSK address: {foodRequest.data.response.data.length > 0 ? foodRequest.data.response.data[0].senderId : \"\"}\r\n                <br/>\r\n                Restaurant LSK address: {foodRequest.data.response.data.length > 0 ? foodRequest.data.response.data[0].recipientId : \"\"}\r\n                <br/>\r\n                Food name: {foodRequest.data.response.data.length > 0 ? foodRequest.data.response.data[0].asset.name : \"\"}\r\n                <br/>\r\n                Amount: LSK {foodRequest.data.response.data.length > 0 ? transactions.utils.convertBeddowsToLSK(foodRequest.data.response.data[0].amount) : 0}\r\n                <br/>\r\n                Phone: {phone}\r\n                <br/>\r\n                Delivery address: {deliveryAddress}\r\n                <br/>\r\n                User: {username}\r\n                <br/>\r\n                Observation: {observation}\r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        );\r\n\r\n        ReactDOM.render(transaction_result, document.getElementById('content'));        \r\n    }        \r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"content\" align=\"center\">                \r\n                <FormReservation onSubmit={handleSubmit}></FormReservation>                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodReservation;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../styles.css';\r\n\r\nfunction Header() {\r\n  return (            \r\n    <div id=\"header\"> \r\n    <img src=\"./images/logo.jpg\" width=\"438\" height=\"93\" alt=\"\" id=\"logo\" /> <img src=\"./images/slogan.gif\" width=\"190\" height=\"81\" alt=\"\" id=\"slogan\" />       \r\n        <ul className=\"menu\">\r\n            <li className=\"btn_1\"><NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink></li>\r\n            <li className=\"line\"></li>\r\n            <li className=\"btn_2\"><NavLink exact activeClassName=\"active\" to=\"/History\">Our History</NavLink></li>\r\n            <li className=\"line\"></li>\r\n            <li className=\"btn_3\"><NavLink exact activeClassName=\"active\" to=\"/Menu\">Menu</NavLink></li>      \r\n            <li className=\"line\"></li>\r\n            <li className=\"btn_8\"><NavLink exact activeClassName=\"active\" to=\"/Refund\">Refund</NavLink></li>\r\n            <li className=\"line\"></li>\r\n            <li className=\"btn_7\"><NavLink exact activeClassName=\"active\" to=\"/Reservation\">Reservations</NavLink></li>\r\n            <li className=\"line\"></li>\r\n            <li className=\"btn_6\"><NavLink exact activeClassName=\"active\" to=\"/Contact\">Contacts</NavLink></li>\r\n        </ul>      \r\n    </div>    \r\n  );\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div id=\"footer\">\r\n      <br/>\r\n      <div align=\"center\">Copyright &copy; Dav1 | Design by <a href=\"http://freshtemplates.com/\">Website Templates</a></div>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nimport '../styles.css';\r\n\r\nfunction Contact(){    \r\n\r\n    return (        \r\n        <div id=\"app\">\r\n            <div id=\"content\">\r\n                <br/>\r\n                <br/> \r\n                <div align=\"center\">                                \r\n                    <div className=\"recipes_topic\"> \r\n                        <img src=\"./images/davi_paris.jpg\" width=\"200\" height=\"150\" alt=\"\" />\r\n                        <p><span className=\"headline\">https://github.com/davilinfo</span> <br />\r\n                        Author: Davi</p>\r\n                        <p>Lisk community discord id: Dav1</p>\r\n                        <p>Email: dav1@liskrestaurant.com</p>\r\n                        <p>Scientific work: A Strategy for Mitigating Denial of Service Attacks on Nodes with Delegate Account of Lisk Blockchain</p>\r\n                        <p>ACM book title: 2020 The 2nd International Conference on Blockchain Technology (ICBCT'20), March 12--14, 2020, Hilo, HI, USA</p>\r\n                        <p>ACM digital library DOI: 10.1145/3390566.3391684</p>\r\n                        <div className=\"clear\"></div>\r\n                    </div>\r\n                    \r\n                </div>     \r\n            </div>\r\n       </div>                    \r\n    );\r\n}\r\n\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport History from './components/History';\r\nimport Menu from './components/Menu';\r\nimport FoodOrderQrCode from './components/FoodOrderQrCode';\r\nimport FoodOrderPayment from './components/FoodOrderPayment';\r\nimport FoodOrder from './components/FoodOrder';\r\nimport FoodRefund from './components/FoodRefund';\r\nimport FoodReservation from './components/FoodReservation';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Contact from './components/Contact';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nconst routing = (\r\n    <Router>        \r\n        <Header />        \r\n        <Switch>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/History\" component={History} />\r\n            <Route path=\"/Menu\" component={Menu} />\r\n            <Route path=\"/FoodOrderQrCode\" component={FoodOrderQrCode} />\r\n            <Route path=\"/FoodOrderPayment\" component={FoodOrderPayment} />\r\n            <Route path=\"/FoodOrder\" component={FoodOrder} />\r\n            <Route path=\"/Refund\" component={FoodRefund} />\r\n            <Route path=\"/Reservation\" component={FoodReservation} />\r\n            <Route path=\"/Contact\" component={Contact} />\r\n        </Switch>\r\n        <Footer/>        \r\n    </Router>\r\n);\r\n\r\nReactDOM.render(routing, document.getElementById('root'));"],"sourceRoot":""}